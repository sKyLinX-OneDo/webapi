<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SyntacticSugar.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.SyntacticSugarDelegates">
            <summary>包含用于 SyntacticSugar 的存根和填充码的自定义委托</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimCacheManager`1">
            <summary>SyntacticSugar.CacheManager`1 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimCacheManager`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimCacheManager`1.#ctor(SyntacticSugar.CacheManager{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCacheManager`1.AddStringT0">
            <summary>设置 CacheManager`1.Add(String key, !0 value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCacheManager`1.AddStringT0Int32">
            <summary>设置 CacheManager`1.Add(String key, !0 value, Int32 cacheDurationInSeconds) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCacheManager`1.AddStringT0Int32CacheDependencyCacheItemPriority">
            <summary>设置 CacheManager`1.Add(String key, !0 value, Int32 cacheDurationInSeconds, CacheDependency dependency, CacheItemPriority priority) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCacheManager`1.AddStringT0Int32CacheItemPriority">
            <summary>设置 CacheManager`1.Add(String key, !0 value, Int32 cacheDurationInSeconds, CacheItemPriority priority) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimCacheManager`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCacheManager`1.AllInstances.AddStringT0">
            <summary>设置 CacheManager`1.Add(String key, !0 value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCacheManager`1.AllInstances.AddStringT0Int32">
            <summary>设置 CacheManager`1.Add(String key, !0 value, Int32 cacheDurationInSeconds) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCacheManager`1.AllInstances.AddStringT0Int32CacheDependencyCacheItemPriority">
            <summary>设置 CacheManager`1.Add(String key, !0 value, Int32 cacheDurationInSeconds, CacheDependency dependency, CacheItemPriority priority) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCacheManager`1.AllInstances.AddStringT0Int32CacheItemPriority">
            <summary>设置 CacheManager`1.Add(String key, !0 value, Int32 cacheDurationInSeconds, CacheItemPriority priority) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCacheManager`1.AllInstances.ContainsKeyString">
            <summary>设置 CacheManager`1.ContainsKey(String key) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCacheManager`1.AllInstances.CreateKeyString">
            <summary>设置 CacheManager`1.CreateKey(String key) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCacheManager`1.AllInstances.GetAllKey">
            <summary>设置 CacheManager`1.GetAllKey() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCacheManager`1.AllInstances.GetString">
            <summary>设置 CacheManager`1.Get(String key) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCacheManager`1.AllInstances.ItemGetString">
            <summary>设置 CacheManager`1.get_Item(String key) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCacheManager`1.AllInstances.RemoveAll">
            <summary>设置 CacheManager`1.RemoveAll() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCacheManager`1.AllInstances.RemoveAllFuncOfStringBoolean">
            <summary>设置 CacheManager`1.RemoveAll(Func`2&lt;String,Boolean&gt; removeExpression) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCacheManager`1.AllInstances.RemoveString">
            <summary>设置 CacheManager`1.Remove(String key) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimCacheManager`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimCacheManager`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCacheManager`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCacheManager`1.Constructor">
            <summary>设置 CacheManager`1.CacheManager`1() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCacheManager`1.ContainsKeyString">
            <summary>设置 CacheManager`1.ContainsKey(String key) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCacheManager`1.CreateKeyString">
            <summary>设置 CacheManager`1.CreateKey(String key) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCacheManager`1.GetAllKey">
            <summary>设置 CacheManager`1.GetAllKey() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCacheManager`1.GetInstance">
            <summary>设置 CacheManager`1.GetInstance() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCacheManager`1.GetString">
            <summary>设置 CacheManager`1.Get(String key) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCacheManager`1.ItemGetString">
            <summary>设置 CacheManager`1.get_Item(String key) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCacheManager`1.RemoveAll">
            <summary>设置 CacheManager`1.RemoveAll() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCacheManager`1.RemoveAllFuncOfStringBoolean">
            <summary>设置 CacheManager`1.RemoveAll(Func`2&lt;String,Boolean&gt; removeExpression) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCacheManager`1.RemoveString">
            <summary>设置 CacheManager`1.Remove(String key) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCacheManager`1.StaticConstructor">
            <summary>设置 CacheManager`1.CacheManager`1() 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimClassGenerating">
            <summary>SyntacticSugar.ClassGenerating 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimClassGenerating.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimClassGenerating.#ctor(SyntacticSugar.ClassGenerating)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimClassGenerating.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimClassGenerating.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimClassGenerating.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimClassGenerating.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimClassGenerating.ChangeTypeType">
            <summary>设置 ClassGenerating.ChangeType(Type type) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimClassGenerating.Constructor">
            <summary>设置 ClassGenerating.ClassGenerating() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimClassGenerating.DataTableToClassDataTableString">
            <summary>设置 ClassGenerating.DataTableToClass(DataTable dt, String className) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimClassGenerating.DynamicToClassObjectString">
            <summary>设置 ClassGenerating.DynamicToClass(Object entity, String className) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimClassGenerating.SqlToClassStringStringString">
            <summary>设置 ClassGenerating.SqlToClass(String sql, String className, String connName) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimClassGenerating.SqlToClassStringStringStringStringStringString">
            <summary>设置 ClassGenerating.SqlToClass(String sql, String className, String server, String database, String uid, String pwd) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimConfigSugar">
            <summary>SyntacticSugar.ConfigSugar 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimConfigSugar.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimConfigSugar.#ctor(SyntacticSugar.ConfigSugar)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimConfigSugar.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimConfigSugar.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimConfigSugar.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimConfigSugar.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimConfigSugar.Constructor">
            <summary>设置 ConfigSugar.ConfigSugar() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimConfigSugar.GetAppBoolStringBoolean">
            <summary>设置 ConfigSugar.GetAppBool(String key, Boolean defaultValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimConfigSugar.GetAppIntStringInt32">
            <summary>设置 ConfigSugar.GetAppInt(String key, Int32 defaultValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimConfigSugar.GetAppStringStringString">
            <summary>设置 ConfigSugar.GetAppString(String key, String defaultValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimConfigSugar.GetConfigStringString">
            <summary>设置 ConfigSugar.GetConfigString(String key) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimConfigSugar.GetConnectionStringString">
            <summary>设置 ConfigSugar.GetConnectionString(String key) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimCookiesManager`1">
            <summary>SyntacticSugar.CookiesManager`1 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimCookiesManager`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimCookiesManager`1.#ctor(SyntacticSugar.CookiesManager{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCookiesManager`1.AddStringInt32HttpCookieStringHttpResponse">
            <summary>设置 CookiesManager`1.Add(String key, Int32 cookiesDurationInSeconds, HttpCookie cookie, String setValue, HttpResponse response) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCookiesManager`1.AddStringT0">
            <summary>设置 CookiesManager`1.Add(String key, !0 value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCookiesManager`1.AddStringT0Int32">
            <summary>设置 CookiesManager`1.Add(String key, !0 value, Int32 cookiesDurationInSeconds) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCookiesManager`1.AddStringT0Int32StringString">
            <summary>设置 CookiesManager`1.Add(String key, !0 value, Int32 cookiesDurationInSeconds, String path, String domain) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimCookiesManager`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCookiesManager`1.AllInstances.AddStringInt32HttpCookieStringHttpResponse">
            <summary>设置 CookiesManager`1.Add(String key, Int32 cookiesDurationInSeconds, HttpCookie cookie, String setValue, HttpResponse response) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCookiesManager`1.AllInstances.AddStringT0">
            <summary>设置 CookiesManager`1.Add(String key, !0 value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCookiesManager`1.AllInstances.AddStringT0Int32">
            <summary>设置 CookiesManager`1.Add(String key, !0 value, Int32 cookiesDurationInSeconds) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCookiesManager`1.AllInstances.AddStringT0Int32StringString">
            <summary>设置 CookiesManager`1.Add(String key, !0 value, Int32 cookiesDurationInSeconds, String path, String domain) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCookiesManager`1.AllInstances.ContainsKeyString">
            <summary>设置 CookiesManager`1.ContainsKey(String key) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCookiesManager`1.AllInstances.GetAllKey">
            <summary>设置 CookiesManager`1.GetAllKey() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCookiesManager`1.AllInstances.GetString">
            <summary>设置 CookiesManager`1.Get(String key) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCookiesManager`1.AllInstances.ItemGetString">
            <summary>设置 CookiesManager`1.get_Item(String key) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCookiesManager`1.AllInstances.RemoveAll">
            <summary>设置 CookiesManager`1.RemoveAll() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCookiesManager`1.AllInstances.RemoveAllFuncOfStringBoolean">
            <summary>设置 CookiesManager`1.RemoveAll(Func`2&lt;String,Boolean&gt; removeExpression) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCookiesManager`1.AllInstances.RemoveString">
            <summary>设置 CookiesManager`1.Remove(String key) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimCookiesManager`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimCookiesManager`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCookiesManager`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCookiesManager`1.Constructor">
            <summary>设置 CookiesManager`1.CookiesManager`1() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCookiesManager`1.ContainsKeyString">
            <summary>设置 CookiesManager`1.ContainsKey(String key) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCookiesManager`1.GetAllKey">
            <summary>设置 CookiesManager`1.GetAllKey() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCookiesManager`1.GetInstance">
            <summary>设置 CookiesManager`1.GetInstance() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCookiesManager`1.GetString">
            <summary>设置 CookiesManager`1.Get(String key) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCookiesManager`1.ItemGetString">
            <summary>设置 CookiesManager`1.get_Item(String key) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCookiesManager`1.RemoveAll">
            <summary>设置 CookiesManager`1.RemoveAll() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCookiesManager`1.RemoveAllFuncOfStringBoolean">
            <summary>设置 CookiesManager`1.RemoveAll(Func`2&lt;String,Boolean&gt; removeExpression) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCookiesManager`1.RemoveString">
            <summary>设置 CookiesManager`1.Remove(String key) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimCookiesManager`1.StaticConstructor">
            <summary>设置 CookiesManager`1.CookiesManager`1() 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimDataTableExtension">
            <summary>SyntacticSugar.DataTableExtension 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimDataTableExtension.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimDataTableExtension.AddRowDataTableObjectArray">
            <summary>设置 DataTableExtension.AddRow(DataTable dt, Object[] rowValues) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimDataTableExtension.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimDataTableExtension.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimDataTableExtension.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimDataTableExtensions">
            <summary>SyntacticSugar.DataTableExtensions 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimDataTableExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimDataTableExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimDataTableExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimDataTableExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimDataTableExtensions.DataTableToJsonDataTable">
            <summary>设置 DataTableExtensions.DataTableToJson(DataTable table) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimDataTableSugar">
            <summary>SyntacticSugar.DataTableSugar 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimDataTableSugar.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimDataTableSugar.#ctor(SyntacticSugar.DataTableSugar)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimDataTableSugar.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimDataTableSugar.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimDataTableSugar.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimDataTableSugar.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimDataTableSugar.Constructor">
            <summary>设置 DataTableSugar.DataTableSugar() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimDataTableSugar.CreateEasyTableStringArray">
            <summary>设置 DataTableSugar.CreateEasyTable(String[] columnNameArray) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimDateSugar">
            <summary>SyntacticSugar.DateSugar 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimDateSugar.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimDateSugar.#ctor(SyntacticSugar.DateSugar)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimDateSugar.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimDateSugar.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimDateSugar.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimDateSugar.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimDateSugar.ComparisonTimeDateTimeDateTimeDateTime">
            <summary>设置 DateSugar.ComparisonTime(DateTime t1, DateTime t2, DateTime comparisonTime) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimDateSugar.Constructor">
            <summary>设置 DateSugar.DateSugar() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimDateSugar.DateDiffDateSugarDateIntervalDateTimeDateTime">
            <summary>设置 DateSugar.DateDiff(DateInterval interval, DateTime date1, DateTime date2) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimDateSugar.DateStringFromNowDateTime">
            <summary>设置 DateSugar.DateStringFromNow(DateTime dt) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimDateSugar.FixDouble">
            <summary>设置 DateSugar.Fix(Double Number) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimDateSugar.GetTwoTimeAreaIntersectionDateTimeDateTimeDateTimeDateTime">
            <summary>设置 DateSugar.GetTwoTimeAreaIntersection(DateTime minT, DateTime maxT, DateTime t1, DateTime t2) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimDateSugar.IsSameDayDateTimeDateTime">
            <summary>设置 DateSugar.IsSameDay(DateTime d1, DateTime d2) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimDateSugar.IsSameDayNullableOfDateTimeNullableOfDateTime">
            <summary>设置 DateSugar.IsSameDay(Nullable`1&lt;DateTime&gt; d1, Nullable`1&lt;DateTime&gt; d2) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimDesc">
            <summary>SyntacticSugar.Desc 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimDesc.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimDesc.#ctor(SyntacticSugar.Desc)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimDesc.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimDesc.AllInstances.ValueGet">
            <summary>设置 Desc.get_Value() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimDesc.AllInstances.ValueSetString">
            <summary>设置 Desc.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimDesc.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimDesc.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimDesc.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimDesc.ConstructorString">
            <summary>设置 Desc.Desc(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimDesc.ValueGet">
            <summary>设置 Desc.get_Value() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimDesc.ValueSetString">
            <summary>设置 Desc.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimDictionaryExtensions">
            <summary>SyntacticSugar.DictionaryExtensions 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimDictionaryExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimDictionaryExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimDictionaryExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimDictionaryExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimDictionaryExtensions.GetTryValueDictionaryOfStringStringString">
            <summary>设置 DictionaryExtensions.GetTryValue(Dictionary`2&lt;String,String&gt; thisObj, String key) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimDynamicSugar">
            <summary>SyntacticSugar.DynamicSugar 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimDynamicSugar.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimDynamicSugar.#ctor(SyntacticSugar.DynamicSugar)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimDynamicSugar.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimDynamicSugar.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimDynamicSugar.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimDynamicSugar.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimDynamicSugar.Constructor">
            <summary>设置 DynamicSugar.DynamicSugar() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimDynamicSugar.DictionaryToDynamicDictionaryOfStringObject">
            <summary>设置 DynamicSugar.DictionaryToDynamic(Dictionary`2&lt;String,Object&gt; value) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimDynamicSugar.DynamicToDictionaryOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Collections.Generic.Dictionary{System.String,System.Object}})">
            <summary>设置 DynamicSugar.DynamicToDictionary(!!0 objeto) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimEncryptSugar">
            <summary>SyntacticSugar.EncryptSugar 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimEncryptSugar.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimEncryptSugar.#ctor(SyntacticSugar.EncryptSugar)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimEncryptSugar.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimEncryptSugar.AllInstances.DecryptoString">
            <summary>设置 EncryptSugar.Decrypto(String source) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimEncryptSugar.AllInstances.EncryptoString">
            <summary>设置 EncryptSugar.Encrypto(String source) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimEncryptSugar.AllInstances.GetLegalIV">
            <summary>设置 EncryptSugar.GetLegalIV() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimEncryptSugar.AllInstances.GetLegalKey">
            <summary>设置 EncryptSugar.GetLegalKey() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimEncryptSugar.AllInstances.MD5String">
            <summary>设置 EncryptSugar.MD5(String source) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimEncryptSugar.AllInstances.SetMaxCacheNumInt32">
            <summary>设置 EncryptSugar.SetMaxCacheNum(Int32 i) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimEncryptSugar.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimEncryptSugar.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimEncryptSugar.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimEncryptSugar.Constructor">
            <summary>设置 EncryptSugar.EncryptSugar() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimEncryptSugar.DecryptoString">
            <summary>设置 EncryptSugar.Decrypto(String source) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimEncryptSugar.EncryptoString">
            <summary>设置 EncryptSugar.Encrypto(String source) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimEncryptSugar.GetInstance">
            <summary>设置 EncryptSugar.GetInstance() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimEncryptSugar.GetLegalIV">
            <summary>设置 EncryptSugar.GetLegalIV() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimEncryptSugar.GetLegalKey">
            <summary>设置 EncryptSugar.GetLegalKey() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimEncryptSugar.MD5String">
            <summary>设置 EncryptSugar.MD5(String source) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimEncryptSugar.SetMaxCacheNumInt32">
            <summary>设置 EncryptSugar.SetMaxCacheNum(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimEncryptSugar.StaticConstructor">
            <summary>设置 EncryptSugar.EncryptSugar() 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimEnumSugarExtenions">
            <summary>SyntacticSugar.EnumSugarExtenions 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimEnumSugarExtenions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimEnumSugarExtenions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimEnumSugarExtenions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimEnumSugarExtenions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimEnumSugarExtenions.GetAttributeOf1Enum``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Enum,``0})">
            <summary>设置 EnumSugarExtenions.GetAttribute(Enum thisValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimEnumSugarExtenions.GetAttributeValueEnum">
            <summary>设置 EnumSugarExtenions.GetAttributeValue(Enum thisValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimEnumSugarExtenions.GetNameEnum">
            <summary>设置 EnumSugarExtenions.GetName(Enum thisValue) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimEnumSugarExtenions.GetValueOf1Enum``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Enum,``0})">
            <summary>设置 EnumSugarExtenions.GetValue(Enum thisValue) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimFileSugar">
            <summary>SyntacticSugar.FileSugar 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimFileSugar.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimFileSugar.#ctor(SyntacticSugar.FileSugar)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimFileSugar.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimFileSugar.AllInstances.GetFiePathAndCreateDirectoryByCodeOf1StringM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SyntacticSugar.FileSugar,System.String,``0,System.String,System.String})">
            <summary>设置 FileSugar.GetFiePathAndCreateDirectoryByCode(String directory, !!0 code, String fileName) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimFileSugar.AllInstances.GetFiePathAndCreateDirectoryByDateOf1StringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SyntacticSugar.FileSugar,System.String,System.String,System.String})">
            <summary>设置 FileSugar.GetFiePathAndCreateDirectoryByDate(String directory, String fileName) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.AppendTextStringString">
            <summary>设置 FileSugar.AppendText(String filePath, String text) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimFileSugar.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimFileSugar.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.ClearDirectoryString">
            <summary>设置 FileSugar.ClearDirectory(String directoryPath) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.ClearFileString">
            <summary>设置 FileSugar.ClearFile(String filePath) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.Constructor">
            <summary>设置 FileSugar.FileSugar() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.ContainsStringString">
            <summary>设置 FileSugar.Contains(String directoryPath, String searchPattern) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.ContainsStringStringBoolean">
            <summary>设置 FileSugar.Contains(String directoryPath, String searchPattern, Boolean isSearchChild) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.CopyToStringString">
            <summary>设置 FileSugar.CopyTo(String sourceFilePath, String destFilePath) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.CreateDirectoryString">
            <summary>设置 FileSugar.CreateDirectory(String directoryPath) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.CreateFileString">
            <summary>设置 FileSugar.CreateFile(String filePath) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.CreateFileStringByteArray">
            <summary>设置 FileSugar.CreateFile(String filePath, Byte[] buffer) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.CreateFileStringString">
            <summary>设置 FileSugar.CreateFile(String filePath, String text) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.DeleteDirectoryString">
            <summary>设置 FileSugar.DeleteDirectory(String directoryPath) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.DeleteFileString">
            <summary>设置 FileSugar.DeleteFile(String filePath) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.FileToBytesString">
            <summary>设置 FileSugar.FileToBytes(String filePath) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.FileToStringString">
            <summary>设置 FileSugar.FileToString(String filePath) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.GetDirectoriesString">
            <summary>设置 FileSugar.GetDirectories(String directoryPath) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.GetDirectoriesStringStringBoolean">
            <summary>设置 FileSugar.GetDirectories(String directoryPath, String searchPattern, Boolean isSearchChild) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.GetDirectoryFromFilePathString">
            <summary>设置 FileSugar.GetDirectoryFromFilePath(String filePath) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.GetExtensionString">
            <summary>设置 FileSugar.GetExtension(String filePath) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimFileSugar.GetFiePathAndCreateDirectoryByCodeOf1StringM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,System.String,System.String})">
            <summary>设置 FileSugar.GetFiePathAndCreateDirectoryByCode(String directory, !!0 code, String fileName) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimFileSugar.GetFiePathAndCreateDirectoryByDateOf1StringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.String,System.String})">
            <summary>设置 FileSugar.GetFiePathAndCreateDirectoryByDate(String directory, String fileName) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.GetFileNameNoExtensionString">
            <summary>设置 FileSugar.GetFileNameNoExtension(String filePath) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.GetFileNameString">
            <summary>设置 FileSugar.GetFileName(String filePath) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.GetFileNamesString">
            <summary>设置 FileSugar.GetFileNames(String directoryPath) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.GetFileNamesStringStringBoolean">
            <summary>设置 FileSugar.GetFileNames(String directoryPath, String searchPattern, Boolean isSearchChild) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.GetFileSizeByKBString">
            <summary>设置 FileSugar.GetFileSizeByKB(String filePath) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.GetFileSizeByMBString">
            <summary>设置 FileSugar.GetFileSizeByMB(String filePath) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.GetFileSizeString">
            <summary>设置 FileSugar.GetFileSize(String filePath) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.GetFileSreamString">
            <summary>设置 FileSugar.GetFileSream(String Path) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.GetLineCountString">
            <summary>设置 FileSugar.GetLineCount(String filePath) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.GetMapPathString">
            <summary>设置 FileSugar.GetMapPath(String strPath) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.GetMinPicStringInt32">
            <summary>设置 FileSugar.GetMinPic(String filename, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.GetMinPicStringStringInt32">
            <summary>设置 FileSugar.GetMinPic(String dir, String filename, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.IsEmptyDirectoryString">
            <summary>设置 FileSugar.IsEmptyDirectory(String directoryPath) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.IsExistDirectoryString">
            <summary>设置 FileSugar.IsExistDirectory(String directoryPath) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.IsExistFileString">
            <summary>设置 FileSugar.IsExistFile(String filePath) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.MergeUrlStringArray">
            <summary>设置 FileSugar.MergeUrl(String[] urls) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.MoveStringString">
            <summary>设置 FileSugar.Move(String sourceFilePath, String descFilePath) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.MoveToDirectoryStringString">
            <summary>设置 FileSugar.MoveToDirectory(String sourceFilePath, String descDirectoryPath) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.OpenDirectoryString">
            <summary>设置 FileSugar.OpenDirectory(String directoryPath) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.OpenFileString">
            <summary>设置 FileSugar.OpenFile(String filePath) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.ShowExcelString">
            <summary>设置 FileSugar.ShowExcel(String filePath) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.ShowHtmlString">
            <summary>设置 FileSugar.ShowHtml(String filePath) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.ShowPDFString">
            <summary>设置 FileSugar.ShowPDF(String filePath) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.ShowString">
            <summary>设置 FileSugar.Show(String filePath) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.ShowWordString">
            <summary>设置 FileSugar.ShowWord(String filePath) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.StaticConstructor">
            <summary>设置 FileSugar.FileSugar() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.StreamToBytesStream">
            <summary>设置 FileSugar.StreamToBytes(Stream stream) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.WriteFileStringString">
            <summary>设置 FileSugar.WriteFile(String strFilePath, String strValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.WriteFileStringStringString">
            <summary>设置 FileSugar.WriteFile(String strFilePath, String strValue, String charset) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimFileSugar.WriteTextStringString">
            <summary>设置 FileSugar.WriteText(String filePath, String text) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimHtmlInfo">
            <summary>SyntacticSugar.HtmlInfo 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimHtmlInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimHtmlInfo.#ctor(SyntacticSugar.HtmlInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimHtmlInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimHtmlInfo.AllInstances.AttributesGet">
            <summary>设置 HtmlInfo.get_Attributes() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimHtmlInfo.AllInstances.AttributesSetDictionaryOfStringString">
            <summary>设置 HtmlInfo.set_Attributes(Dictionary`2&lt;String,String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimHtmlInfo.AllInstances.FullHtmlGet">
            <summary>设置 HtmlInfo.get_FullHtml() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimHtmlInfo.AllInstances.InnerHtmlGet">
            <summary>设置 HtmlInfo.get_InnerHtml() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimHtmlInfo.AllInstances.InnerHtmlSetString">
            <summary>设置 HtmlInfo.set_InnerHtml(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimHtmlInfo.AllInstances.OldFullHtmlGet">
            <summary>设置 HtmlInfo.get_OldFullHtml() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimHtmlInfo.AllInstances.OldFullHtmlSetString">
            <summary>设置 HtmlInfo.set_OldFullHtml(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimHtmlInfo.AllInstances.SameLeveHtmlGet">
            <summary>设置 HtmlInfo.get_SameLeveHtml() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimHtmlInfo.AllInstances.SameLeveHtmlSetString">
            <summary>设置 HtmlInfo.set_SameLeveHtml(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimHtmlInfo.AllInstances.TagNameGet">
            <summary>设置 HtmlInfo.get_TagName() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimHtmlInfo.AllInstances.TagNameSetString">
            <summary>设置 HtmlInfo.set_TagName(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimHtmlInfo.AttributesGet">
            <summary>设置 HtmlInfo.get_Attributes() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimHtmlInfo.AttributesSetDictionaryOfStringString">
            <summary>设置 HtmlInfo.set_Attributes(Dictionary`2&lt;String,String&gt; value) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimHtmlInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimHtmlInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimHtmlInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimHtmlInfo.Constructor">
            <summary>设置 HtmlInfo.HtmlInfo() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimHtmlInfo.FullHtmlGet">
            <summary>设置 HtmlInfo.get_FullHtml() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimHtmlInfo.InnerHtmlGet">
            <summary>设置 HtmlInfo.get_InnerHtml() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimHtmlInfo.InnerHtmlSetString">
            <summary>设置 HtmlInfo.set_InnerHtml(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimHtmlInfo.OldFullHtmlGet">
            <summary>设置 HtmlInfo.get_OldFullHtml() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimHtmlInfo.OldFullHtmlSetString">
            <summary>设置 HtmlInfo.set_OldFullHtml(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimHtmlInfo.SameLeveHtmlGet">
            <summary>设置 HtmlInfo.get_SameLeveHtml() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimHtmlInfo.SameLeveHtmlSetString">
            <summary>设置 HtmlInfo.set_SameLeveHtml(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimHtmlInfo.TagNameGet">
            <summary>设置 HtmlInfo.get_TagName() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimHtmlInfo.TagNameSetString">
            <summary>设置 HtmlInfo.set_TagName(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimHtmlInfo._get_FullHtmlb__0KeyValuePairOfStringString">
            <summary>设置 HtmlInfo.&lt;get_FullHtml&gt;b__0(KeyValuePair`2&lt;String,String&gt; c) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimIEnumerableExtensions">
            <summary>SyntacticSugar.IEnumerableExtensions 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimIEnumerableExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimIEnumerableExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimIEnumerableExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimIEnumerableExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimIEnumerableExtensions.OrderByDataRowOf1IEnumerableOfM0StringIEnumerableExtensionsOrderByType``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.String,SyntacticSugar.IEnumerableExtensions.OrderByType,System.Linq.IOrderedEnumerable{``0}})">
            <summary>设置 IEnumerableExtensions.OrderByDataRow(IEnumerable`1&lt;!!0&gt; list, String sortField, OrderByType orderByType) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimIEnumerableExtensions.OrderByOf1IEnumerableOfM0StringIEnumerableExtensionsOrderByType``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.String,SyntacticSugar.IEnumerableExtensions.OrderByType,System.Linq.IOrderedEnumerable{``0}})">
            <summary>设置 IEnumerableExtensions.OrderBy(IEnumerable`1&lt;!!0&gt; list, String sortField, OrderByType orderByType) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimIEnumerableExtensions.ThenByDataRowOf1IOrderedEnumerableOfM0StringIEnumerableExtensionsOrderByType``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IOrderedEnumerable{``0},System.String,SyntacticSugar.IEnumerableExtensions.OrderByType,System.Linq.IOrderedEnumerable{``0}})">
            <summary>设置 IEnumerableExtensions.ThenByDataRow(IOrderedEnumerable`1&lt;!!0&gt; list, String sortField, OrderByType orderByType) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimIEnumerableExtensions.ThenByOf1IOrderedEnumerableOfM0StringIEnumerableExtensionsOrderByType``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IOrderedEnumerable{``0},System.String,SyntacticSugar.IEnumerableExtensions.OrderByType,System.Linq.IOrderedEnumerable{``0}})">
            <summary>设置 IEnumerableExtensions.ThenBy(IOrderedEnumerable`1&lt;!!0&gt; list, String sortField, OrderByType orderByType) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimIEnumerableExtensions.TryForEachOf1IEnumerableOfM0ActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.IEnumerable{``0},System.Action{``0}})">
            <summary>设置 IEnumerableExtensions.TryForEach(IEnumerable`1&lt;!!0&gt; source, Action`1&lt;!!0&gt; action) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimIEnumerableExtensions.TryForEachOf1IEnumerableOfM0ActionOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Int32}})">
            <summary>设置 IEnumerableExtensions.TryForEach(IEnumerable`1&lt;!!0&gt; source, Action`2&lt;!!0,Int32&gt; action) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimIHttpStorageObject`1">
            <summary>SyntacticSugar.IHttpStorageObject`1 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimIHttpStorageObject`1.#ctor(SyntacticSugar.IHttpStorageObject{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimIHttpStorageObject`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimIHttpStorageObject`1.AllInstances.contextGet">
            <summary>设置 IHttpStorageObject`1.get_context() 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimIHttpStorageObject`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimIHttpStorageObject`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimIHttpStorageObject`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimIHttpStorageObject`1.Constructor">
            <summary>设置 IHttpStorageObject`1.IHttpStorageObject`1() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimIHttpStorageObject`1.contextGet">
            <summary>设置 IHttpStorageObject`1.get_context() 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimIQueryableExtensions">
            <summary>SyntacticSugar.IQueryableExtensions 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimIQueryableExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimIQueryableExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimIQueryableExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimIQueryableExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimIQueryableExtensions.GenerateMethodCallOf1IQueryableOfM0StringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.String,System.String,System.Linq.Expressions.MethodCallExpression})">
            <summary>设置 IQueryableExtensions.GenerateMethodCall(IQueryable`1&lt;!!0&gt; source, String methodName, String fieldName) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimIQueryableExtensions.GenerateSelectorOf1StringTypeOut``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.String,System.Type,System.Linq.Expressions.LambdaExpression})">
            <summary>设置 IQueryableExtensions.GenerateSelector(String propertyName, Type&amp; resultType) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimIQueryableExtensions.OrderByDescendingOf1IQueryableOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.String,System.Linq.IOrderedQueryable{``0}})">
            <summary>设置 IQueryableExtensions.OrderByDescending(IQueryable`1&lt;!!0&gt; source, String fieldName) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimIQueryableExtensions.OrderByOf1IQueryableOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.String,System.Linq.IOrderedQueryable{``0}})">
            <summary>设置 IQueryableExtensions.OrderBy(IQueryable`1&lt;!!0&gt; source, String fieldName) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimIQueryableExtensions.OrderByOf1IQueryableOfM0StringIQueryableExtensionsOrderByTypeString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.String,SyntacticSugar.IQueryableExtensions.OrderByType,System.String,System.Linq.IOrderedQueryable{``0}})">
            <summary>设置 IQueryableExtensions.OrderBy(IQueryable`1&lt;!!0&gt; source, String fieldName, OrderByType orderByType, String defaultCol) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimIQueryableExtensions.OrderUsingSortExpressionOf1IQueryableOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.String,System.Linq.IOrderedQueryable{``0}})">
            <summary>设置 IQueryableExtensions.OrderUsingSortExpression(IQueryable`1&lt;!!0&gt; source, String sortExpression) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimIQueryableExtensions.ThenByDescendingOf1IOrderedQueryableOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IOrderedQueryable{``0},System.String,System.Linq.IOrderedQueryable{``0}})">
            <summary>设置 IQueryableExtensions.ThenByDescending(IOrderedQueryable`1&lt;!!0&gt; source, String fieldName) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimIQueryableExtensions.ThenByOf1IOrderedQueryableOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IOrderedQueryable{``0},System.String,System.Linq.IOrderedQueryable{``0}})">
            <summary>设置 IQueryableExtensions.ThenBy(IOrderedQueryable`1&lt;!!0&gt; source, String fieldName) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimInitScriptModel">
            <summary>SyntacticSugar.InitScriptModel 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimInitScriptModel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimInitScriptModel.#ctor(SyntacticSugar.InitScriptModel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimInitScriptModel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimInitScriptModel.AllInstances.ItemOptionGet">
            <summary>设置 InitScriptModel.get_ItemOption() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimInitScriptModel.AllInstances.ItemOptionSetValidationSugarOptionItem">
            <summary>设置 InitScriptModel.set_ItemOption(OptionItem value) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimInitScriptModel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimInitScriptModel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimInitScriptModel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimInitScriptModel.Constructor">
            <summary>设置 InitScriptModel.InitScriptModel() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimInitScriptModel.ItemOptionGet">
            <summary>设置 InitScriptModel.get_ItemOption() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimInitScriptModel.ItemOptionSetValidationSugarOptionItem">
            <summary>设置 InitScriptModel.set_ItemOption(OptionItem value) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimIsWhatExtenions">
            <summary>SyntacticSugar.IsWhatExtenions 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimIsWhatExtenions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimIsWhatExtenions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimIsWhatExtenions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimIsWhatExtenions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimIsWhatExtenions.IsContainsInStringStringArray">
            <summary>设置 IsWhatExtenions.IsContainsIn(String thisValue, String[] inValues) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimIsWhatExtenions.IsDateObject">
            <summary>设置 IsWhatExtenions.IsDate(Object thisValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimIsWhatExtenions.IsEamilObject">
            <summary>设置 IsWhatExtenions.IsEamil(Object thisValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimIsWhatExtenions.IsFalseObject">
            <summary>设置 IsWhatExtenions.IsFalse(Object thisValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimIsWhatExtenions.IsFaxObject">
            <summary>设置 IsWhatExtenions.IsFax(Object thisValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimIsWhatExtenions.IsIDcardObject">
            <summary>设置 IsWhatExtenions.IsIDcard(Object thisValue) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimIsWhatExtenions.IsInOf1M0M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0[],System.Boolean})">
            <summary>设置 IsWhatExtenions.IsIn(!!0 thisValue, !!0[] values) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimIsWhatExtenions.IsInRangeDateTimeDateTimeDateTime">
            <summary>设置 IsWhatExtenions.IsInRange(DateTime thisValue, DateTime begin, DateTime end) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimIsWhatExtenions.IsInRangeInt32Int32Int32">
            <summary>设置 IsWhatExtenions.IsInRange(Int32 thisValue, Int32 begin, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimIsWhatExtenions.IsIntObject">
            <summary>设置 IsWhatExtenions.IsInt(Object thisValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimIsWhatExtenions.IsMatchObjectString">
            <summary>设置 IsWhatExtenions.IsMatch(Object thisValue, String pattern) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimIsWhatExtenions.IsMobileObject">
            <summary>设置 IsWhatExtenions.IsMobile(Object thisValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimIsWhatExtenions.IsMoneyObject">
            <summary>设置 IsWhatExtenions.IsMoney(Object thisValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimIsWhatExtenions.IsNoIntObject">
            <summary>设置 IsWhatExtenions.IsNoInt(Object thisValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimIsWhatExtenions.IsNullOrEmptyGuid">
            <summary>设置 IsWhatExtenions.IsNullOrEmpty(Guid thisValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimIsWhatExtenions.IsNullOrEmptyNullableOfGuid">
            <summary>设置 IsWhatExtenions.IsNullOrEmpty(Nullable`1&lt;Guid&gt; thisValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimIsWhatExtenions.IsNullOrEmptyObject">
            <summary>设置 IsWhatExtenions.IsNullOrEmpty(Object thisValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimIsWhatExtenions.IsTelephoneObject">
            <summary>设置 IsWhatExtenions.IsTelephone(Object thisValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimIsWhatExtenions.IsTrueObject">
            <summary>设置 IsWhatExtenions.IsTrue(Object thisValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimIsWhatExtenions.IsValuableIEnumerableOfObject">
            <summary>设置 IsWhatExtenions.IsValuable(IEnumerable`1&lt;Object&gt; thisValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimIsWhatExtenions.IsValuableObject">
            <summary>设置 IsWhatExtenions.IsValuable(Object thisValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimIsWhatExtenions.IsZeroObject">
            <summary>设置 IsWhatExtenions.IsZero(Object thisValue) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimLogicSugarExtenions">
            <summary>SyntacticSugar.LogicSugarExtenions 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimLogicSugarExtenions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimLogicSugarExtenions.AndBooleanBooleanArray">
            <summary>设置 LogicSugarExtenions.And(Boolean thisValue, Boolean[] andValues) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimLogicSugarExtenions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimLogicSugarExtenions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimLogicSugarExtenions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimLogicSugarExtenions.BreakOf1LogicSugarExtenionsSwitchSugarModelOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SyntacticSugar.LogicSugarExtenions.SwitchSugarModel{``0},System.Object})">
            <summary>设置 LogicSugarExtenions.Break(SwitchSugarModel`1&lt;!!0&gt; switchSugar) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimLogicSugarExtenions.CaseOf2LogicSugarExtenionsSwitchSugarModelOfM0M0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SyntacticSugar.LogicSugarExtenions.SwitchSugarModel{``0},``0,``1,SyntacticSugar.LogicSugarExtenions.SwitchSugarModel{``0}})">
            <summary>设置 LogicSugarExtenions.Case(SwitchSugarModel`1&lt;!!0&gt; switchSugar, !!0 caseValue, !!1 returnValue) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimLogicSugarExtenions.DefaultOf2LogicSugarExtenionsSwitchSugarModelOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SyntacticSugar.LogicSugarExtenions.SwitchSugarModel{``0},``1,SyntacticSugar.LogicSugarExtenions.SwitchSugarModel{``0}})">
            <summary>设置 LogicSugarExtenions.Default(SwitchSugarModel`1&lt;!!0&gt; switchSugar, !!1 returnValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimLogicSugarExtenions.IIFBooleanInt32">
            <summary>设置 LogicSugarExtenions.IIF(Boolean thisValue, Int32 trueValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimLogicSugarExtenions.IIFBooleanString">
            <summary>设置 LogicSugarExtenions.IIF(Boolean thisValue, String trueValue) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimLogicSugarExtenions.IIFOf1BooleanM0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,``0,``0,``0})">
            <summary>设置 LogicSugarExtenions.IIF(Boolean thisValue, !!0 trueValue, !!0 falseValue) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimLogicSugarExtenions.IIFOf1NullableOfBooleanM0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Nullable{System.Boolean},``0,``0,``0})">
            <summary>设置 LogicSugarExtenions.IIF(Nullable`1&lt;Boolean&gt; thisValue, !!0 trueValue, !!0 falseValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimLogicSugarExtenions.OrBooleanBooleanArray">
            <summary>设置 LogicSugarExtenions.Or(Boolean thisValue, Boolean[] andValues) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimLogicSugarExtenions.ShimSwitchSugarModel`1">
            <summary>SyntacticSugar.LogicSugarExtenions+SwitchSugarModel`1 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimLogicSugarExtenions.ShimSwitchSugarModel`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimLogicSugarExtenions.ShimSwitchSugarModel`1.#ctor(SyntacticSugar.LogicSugarExtenions.SwitchSugarModel{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimLogicSugarExtenions.ShimSwitchSugarModel`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimLogicSugarExtenions.ShimSwitchSugarModel`1.AllInstances.IsEqualsGet">
            <summary>设置 SwitchSugarModel`1.get_IsEquals() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimLogicSugarExtenions.ShimSwitchSugarModel`1.AllInstances.IsEqualsSetBoolean">
            <summary>设置 SwitchSugarModel`1.set_IsEquals(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimLogicSugarExtenions.ShimSwitchSugarModel`1.AllInstances.ReturnValGet">
            <summary>设置 SwitchSugarModel`1.get_ReturnVal() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimLogicSugarExtenions.ShimSwitchSugarModel`1.AllInstances.ReturnValSetObject">
            <summary>设置 SwitchSugarModel`1.set_ReturnVal(Object value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimLogicSugarExtenions.ShimSwitchSugarModel`1.AllInstances.SourceValueGet">
            <summary>设置 SwitchSugarModel`1.get_SourceValue() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimLogicSugarExtenions.ShimSwitchSugarModel`1.AllInstances.SourceValueSetT0">
            <summary>设置 SwitchSugarModel`1.set_SourceValue(!0 value) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimLogicSugarExtenions.ShimSwitchSugarModel`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimLogicSugarExtenions.ShimSwitchSugarModel`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimLogicSugarExtenions.ShimSwitchSugarModel`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimLogicSugarExtenions.ShimSwitchSugarModel`1.Constructor">
            <summary>设置 SwitchSugarModel`1.SwitchSugarModel`1() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimLogicSugarExtenions.ShimSwitchSugarModel`1.IsEqualsGet">
            <summary>设置 SwitchSugarModel`1.get_IsEquals() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimLogicSugarExtenions.ShimSwitchSugarModel`1.IsEqualsSetBoolean">
            <summary>设置 SwitchSugarModel`1.set_IsEquals(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimLogicSugarExtenions.ShimSwitchSugarModel`1.ReturnValGet">
            <summary>设置 SwitchSugarModel`1.get_ReturnVal() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimLogicSugarExtenions.ShimSwitchSugarModel`1.ReturnValSetObject">
            <summary>设置 SwitchSugarModel`1.set_ReturnVal(Object value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimLogicSugarExtenions.ShimSwitchSugarModel`1.SourceValueGet">
            <summary>设置 SwitchSugarModel`1.get_SourceValue() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimLogicSugarExtenions.ShimSwitchSugarModel`1.SourceValueSetT0">
            <summary>设置 SwitchSugarModel`1.set_SourceValue(!0 value) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimLogicSugarExtenions.SwitchOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,SyntacticSugar.LogicSugarExtenions.SwitchSugarModel{``0}})">
            <summary>设置 LogicSugarExtenions.Switch(!!0 thisValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimLogicSugarExtenions._Andb__0Boolean">
            <summary>设置 LogicSugarExtenions.&lt;And&gt;b__0(Boolean c) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimLogicSugarExtenions._Orb__2Boolean">
            <summary>设置 LogicSugarExtenions.&lt;Or&gt;b__2(Boolean c) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimMailSmtp">
            <summary>SyntacticSugar.MailSmtp 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimMailSmtp.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimMailSmtp.#ctor(SyntacticSugar.MailSmtp)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimMailSmtp.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimMailSmtp.AllInstances.ResultGet">
            <summary>设置 MailSmtp.get_Result() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimMailSmtp.AllInstances.ResultSetString">
            <summary>设置 MailSmtp.set_Result(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimMailSmtp.AllInstances.SendStringStringStringArrayStringStringStringArray">
            <summary>设置 MailSmtp.Send(String from, String sender, String[] to, String subject, String body, String[] file) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimMailSmtp.AllInstances.SendStringStringStringStringStringStringArray">
            <summary>设置 MailSmtp.Send(String from, String sender, String to, String subject, String body, String[] file) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimMailSmtp.AllInstances.SetBCStringArray">
            <summary>设置 MailSmtp.SetBC(String[] bc) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimMailSmtp.AllInstances.SetCCStringArray">
            <summary>设置 MailSmtp.SetCC(String[] cc) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimMailSmtp.AllInstances.SetIsHtmlBoolean">
            <summary>设置 MailSmtp.SetIsHtml(Boolean isHtml) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimMailSmtp.AllInstances.SetIsSSLBoolean">
            <summary>设置 MailSmtp.SetIsSSL(Boolean isSSL) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimMailSmtp.AllInstances._bccGet">
            <summary>设置 MailSmtp.get__bcc() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimMailSmtp.AllInstances._bccSetStringArray">
            <summary>设置 MailSmtp.set__bcc(String[] value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimMailSmtp.AllInstances._ccGet">
            <summary>设置 MailSmtp.get__cc() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimMailSmtp.AllInstances._ccSetStringArray">
            <summary>设置 MailSmtp.set__cc(String[] value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimMailSmtp.AllInstances._isHtmlGet">
            <summary>设置 MailSmtp.get__isHtml() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimMailSmtp.AllInstances._isHtmlSetBoolean">
            <summary>设置 MailSmtp.set__isHtml(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimMailSmtp.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimMailSmtp.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimMailSmtp.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimMailSmtp.ConstructorStringStringString">
            <summary>设置 MailSmtp.MailSmtp(String host, String username, String password) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimMailSmtp.ResultGet">
            <summary>设置 MailSmtp.get_Result() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimMailSmtp.ResultSetString">
            <summary>设置 MailSmtp.set_Result(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimMailSmtp.SendStringStringStringArrayStringStringStringArray">
            <summary>设置 MailSmtp.Send(String from, String sender, String[] to, String subject, String body, String[] file) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimMailSmtp.SendStringStringStringStringStringStringArray">
            <summary>设置 MailSmtp.Send(String from, String sender, String to, String subject, String body, String[] file) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimMailSmtp.SetBCStringArray">
            <summary>设置 MailSmtp.SetBC(String[] bc) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimMailSmtp.SetCCStringArray">
            <summary>设置 MailSmtp.SetCC(String[] cc) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimMailSmtp.SetIsHtmlBoolean">
            <summary>设置 MailSmtp.SetIsHtml(Boolean isHtml) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimMailSmtp.SetIsSSLBoolean">
            <summary>设置 MailSmtp.SetIsSSL(Boolean isSSL) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimMailSmtp._bccGet">
            <summary>设置 MailSmtp.get__bcc() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimMailSmtp._bccSetStringArray">
            <summary>设置 MailSmtp.set__bcc(String[] value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimMailSmtp._ccGet">
            <summary>设置 MailSmtp.get__cc() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimMailSmtp._ccSetStringArray">
            <summary>设置 MailSmtp.set__cc(String[] value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimMailSmtp._isHtmlGet">
            <summary>设置 MailSmtp.get__isHtml() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimMailSmtp._isHtmlSetBoolean">
            <summary>设置 MailSmtp.set__isHtml(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimPageString">
            <summary>SyntacticSugar.PageString 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimPageString.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimPageString.#ctor(SyntacticSugar.PageString)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimPageString.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPageString.AllInstances.ConversionDataString">
            <summary>设置 PageString.ConversionData(String page) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPageString.AllInstances.SetClassNameString">
            <summary>设置 PageString.SetClassName(String className) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPageString.AllInstances.SetIsAjaxBoolean">
            <summary>设置 PageString.SetIsAjax(Boolean isAjax) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPageString.AllInstances.SetIsEnglishBoolean">
            <summary>设置 PageString.SetIsEnglish(Boolean isEnglish) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPageString.AllInstances.SetIsShowTextBoolean">
            <summary>设置 PageString.SetIsShowText(Boolean isShowText) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPageString.AllInstances.SetPageIndexNameString">
            <summary>设置 PageString.SetPageIndexName(String pageIndexName) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPageString.AllInstances.SetTextFormatString">
            <summary>设置 PageString.SetTextFormat(String textFormat) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPageString.AllInstances.ToPageStringInt32Int32Int32String">
            <summary>设置 PageString.ToPageString(Int32 total, Int32 pageSize, Int32 pageIndex, String query_string) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimPageString.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimPageString.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPageString.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPageString.Constructor">
            <summary>设置 PageString.PageString() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPageString.ConversionDataString">
            <summary>设置 PageString.ConversionData(String page) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPageString.SetClassNameString">
            <summary>设置 PageString.SetClassName(String className) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPageString.SetIsAjaxBoolean">
            <summary>设置 PageString.SetIsAjax(Boolean isAjax) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPageString.SetIsEnglishBoolean">
            <summary>设置 PageString.SetIsEnglish(Boolean isEnglish) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPageString.SetIsShowTextBoolean">
            <summary>设置 PageString.SetIsShowText(Boolean isShowText) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPageString.SetPageIndexNameString">
            <summary>设置 PageString.SetPageIndexName(String pageIndexName) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPageString.SetTextFormatString">
            <summary>设置 PageString.SetTextFormat(String textFormat) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPageString.ToPageStringInt32Int32Int32String">
            <summary>设置 PageString.ToPageString(Int32 total, Int32 pageSize, Int32 pageIndex, String query_string) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimPerformanceTest">
            <summary>SyntacticSugar.PerformanceTest 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimPerformanceTest.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimPerformanceTest.#ctor(SyntacticSugar.PerformanceTest)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimPerformanceTest.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPerformanceTest.AllInstances.ExecuteActionOfInt32ActionOfStringString">
            <summary>设置 PerformanceTest.Execute(Action`1&lt;Int32&gt; action, Action`1&lt;String&gt; rollBack, String name) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPerformanceTest.AllInstances.GetChartSource">
            <summary>设置 PerformanceTest.GetChartSource() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPerformanceTest.AllInstances.GetCurrentProcessSize">
            <summary>设置 PerformanceTest.GetCurrentProcessSize() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPerformanceTest.AllInstances.GetTime">
            <summary>设置 PerformanceTest.GetTime() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPerformanceTest.AllInstances.SetCountInt32">
            <summary>设置 PerformanceTest.SetCount(Int32 count) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPerformanceTest.AllInstances.SetIsMultithreadBoolean">
            <summary>设置 PerformanceTest.SetIsMultithread(Boolean isMul) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimPerformanceTest.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimPerformanceTest.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPerformanceTest.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPerformanceTest.Constructor">
            <summary>设置 PerformanceTest.PerformanceTest() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPerformanceTest.ExecuteActionOfInt32ActionOfStringString">
            <summary>设置 PerformanceTest.Execute(Action`1&lt;Int32&gt; action, Action`1&lt;String&gt; rollBack, String name) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPerformanceTest.GetChartSource">
            <summary>设置 PerformanceTest.GetChartSource() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPerformanceTest.GetCurrentProcessSize">
            <summary>设置 PerformanceTest.GetCurrentProcessSize() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPerformanceTest.GetTime">
            <summary>设置 PerformanceTest.GetTime() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPerformanceTest.SetCountInt32">
            <summary>设置 PerformanceTest.SetCount(Int32 count) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPerformanceTest.SetIsMultithreadBoolean">
            <summary>设置 PerformanceTest.SetIsMultithread(Boolean isMul) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimPerformanceTest.ShimPerformanceTestChartModel">
            <summary>SyntacticSugar.PerformanceTest+PerformanceTestChartModel 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimPerformanceTest.ShimPerformanceTestChartModel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimPerformanceTest.ShimPerformanceTestChartModel.#ctor(SyntacticSugar.PerformanceTest.PerformanceTestChartModel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimPerformanceTest.ShimPerformanceTestChartModel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPerformanceTest.ShimPerformanceTestChartModel.AllInstances.CPUGet">
            <summary>设置 PerformanceTestChartModel.get_CPU() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPerformanceTest.ShimPerformanceTestChartModel.AllInstances.CPUSetDouble">
            <summary>设置 PerformanceTestChartModel.set_CPU(Double value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPerformanceTest.ShimPerformanceTestChartModel.AllInstances.NameGet">
            <summary>设置 PerformanceTestChartModel.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPerformanceTest.ShimPerformanceTestChartModel.AllInstances.NameSetString">
            <summary>设置 PerformanceTestChartModel.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPerformanceTest.ShimPerformanceTestChartModel.AllInstances.TimeGet">
            <summary>设置 PerformanceTestChartModel.get_Time() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPerformanceTest.ShimPerformanceTestChartModel.AllInstances.TimeSetDouble">
            <summary>设置 PerformanceTestChartModel.set_Time(Double value) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimPerformanceTest.ShimPerformanceTestChartModel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimPerformanceTest.ShimPerformanceTestChartModel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPerformanceTest.ShimPerformanceTestChartModel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPerformanceTest.ShimPerformanceTestChartModel.CPUGet">
            <summary>设置 PerformanceTestChartModel.get_CPU() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPerformanceTest.ShimPerformanceTestChartModel.CPUSetDouble">
            <summary>设置 PerformanceTestChartModel.set_CPU(Double value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPerformanceTest.ShimPerformanceTestChartModel.Constructor">
            <summary>设置 PerformanceTestChartModel.PerformanceTestChartModel() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPerformanceTest.ShimPerformanceTestChartModel.NameGet">
            <summary>设置 PerformanceTestChartModel.get_Name() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPerformanceTest.ShimPerformanceTestChartModel.NameSetString">
            <summary>设置 PerformanceTestChartModel.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPerformanceTest.ShimPerformanceTestChartModel.TimeGet">
            <summary>设置 PerformanceTestChartModel.get_Time() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimPerformanceTest.ShimPerformanceTestChartModel.TimeSetDouble">
            <summary>设置 PerformanceTestChartModel.set_Time(Double value) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimRandomSugar">
            <summary>SyntacticSugar.RandomSugar 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimRandomSugar.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimRandomSugar.#ctor(SyntacticSugar.RandomSugar)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimRandomSugar.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimRandomSugar.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimRandomSugar.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimRandomSugar.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimRandomSugar.Constructor">
            <summary>设置 RandomSugar.RandomSugar() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimRandomSugar.GetFileRndName">
            <summary>设置 RandomSugar.GetFileRndName() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimRandomSugar.GetFormatedNumericInt32Int32">
            <summary>设置 RandomSugar.GetFormatedNumeric(Int32 min, Int32 max) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimRandomSugar.GetRandChineseInt32">
            <summary>设置 RandomSugar.GetRandChinese(Int32 strLength) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimRandomSugar.GetRandStringByPatternString">
            <summary>设置 RandomSugar.GetRandStringByPattern(String pattern) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimRandomSugar.GetRandWordInt32">
            <summary>设置 RandomSugar.GetRandWord(Int32 pwdlen) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimRandomSugar.GetRandomNumInt32">
            <summary>设置 RandomSugar.GetRandomNum(Int32 intlong) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimRandomSugar.GetRandomStringInt32">
            <summary>设置 RandomSugar.GetRandomString(Int32 pwdlen) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimRandomSugar.GetRandomStringStringInt32">
            <summary>设置 RandomSugar.GetRandomString(String pwdchars, Int32 pwdlen) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimRandomSugar.StaticConstructor">
            <summary>设置 RandomSugar.RandomSugar() 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimReflectionSugar">
            <summary>SyntacticSugar.ReflectionSugar 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimReflectionSugar.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimReflectionSugar.#ctor(SyntacticSugar.ReflectionSugar)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimReflectionSugar.AddOf1StringM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,``0,System.Int32})">
            <summary>设置 ReflectionSugar.Add(String key, !!0 value, Int32 cacheDurationInSeconds) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimReflectionSugar.AddOf1StringM0Int32CacheDependencyCacheItemPriority``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,``0,System.Int32,System.Web.Caching.CacheDependency,System.Web.Caching.CacheItemPriority})">
            <summary>设置 ReflectionSugar.Add(String key, !!0 value, Int32 cacheDurationInSeconds, CacheDependency dependency, CacheItemPriority priority) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimReflectionSugar.AddOf1StringM0Int32CacheItemPriority``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,``0,System.Int32,System.Web.Caching.CacheItemPriority})">
            <summary>设置 ReflectionSugar.Add(String key, !!0 value, Int32 cacheDurationInSeconds, CacheItemPriority priority) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimReflectionSugar.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimReflectionSugar.AllInstances.AddOf1StringM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{SyntacticSugar.ReflectionSugar,System.String,``0,System.Int32})">
            <summary>设置 ReflectionSugar.Add(String key, !!0 value, Int32 cacheDurationInSeconds) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimReflectionSugar.AllInstances.AddOf1StringM0Int32CacheDependencyCacheItemPriority``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{SyntacticSugar.ReflectionSugar,System.String,``0,System.Int32,System.Web.Caching.CacheDependency,System.Web.Caching.CacheItemPriority})">
            <summary>设置 ReflectionSugar.Add(String key, !!0 value, Int32 cacheDurationInSeconds, CacheDependency dependency, CacheItemPriority priority) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimReflectionSugar.AllInstances.AddOf1StringM0Int32CacheItemPriority``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{SyntacticSugar.ReflectionSugar,System.String,``0,System.Int32,System.Web.Caching.CacheItemPriority})">
            <summary>设置 ReflectionSugar.Add(String key, !!0 value, Int32 cacheDurationInSeconds, CacheItemPriority priority) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimReflectionSugar.AllInstances.ContainsKeyString">
            <summary>设置 ReflectionSugar.ContainsKey(String key) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimReflectionSugar.AllInstances.CreateInstanceOf1StringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SyntacticSugar.ReflectionSugar,System.String,System.String,``0})">
            <summary>设置 ReflectionSugar.CreateInstance(String fullName, String assemblyName) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimReflectionSugar.AllInstances.CreateInstanceOf1StringStringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SyntacticSugar.ReflectionSugar,System.String,System.String,System.String,``0})">
            <summary>设置 ReflectionSugar.CreateInstance(String assemblyName, String nameSpace, String className) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimReflectionSugar.AllInstances.ExecuteMethodStringStringStringObjectArray">
            <summary>设置 ReflectionSugar.ExecuteMethod(String nameSpace, String className, String MethodName, Object[] parameters) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimReflectionSugar.AllInstances.GetKeyStringArray">
            <summary>设置 ReflectionSugar.GetKey(String[] keyElementArray) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimReflectionSugar.AllInstances.GetOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SyntacticSugar.ReflectionSugar,System.String,``0})">
            <summary>设置 ReflectionSugar.Get(String key) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimReflectionSugar.AllInstances.GetPropertiesType">
            <summary>设置 ReflectionSugar.GetProperties(Type type) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimReflectionSugar.AllInstances.GetTypeByAssemblyAssemblyStringString">
            <summary>设置 ReflectionSugar.GetTypeByAssembly(Assembly asm, String nameSpace, String className) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimReflectionSugar.AllInstances.LoadFileString">
            <summary>设置 ReflectionSugar.LoadFile(String path) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimReflectionSugar.AllInstances._isCacheGet">
            <summary>设置 ReflectionSugar.get__isCache() 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimReflectionSugar.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimReflectionSugar.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimReflectionSugar.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimReflectionSugar.ConstructorInt32">
            <summary>设置 ReflectionSugar.ReflectionSugar(Int32 time) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimReflectionSugar.ContainsKeyString">
            <summary>设置 ReflectionSugar.ContainsKey(String key) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimReflectionSugar.CreateInstanceOf1StringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.String,``0})">
            <summary>设置 ReflectionSugar.CreateInstance(String fullName, String assemblyName) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimReflectionSugar.CreateInstanceOf1StringStringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.String,System.String,``0})">
            <summary>设置 ReflectionSugar.CreateInstance(String assemblyName, String nameSpace, String className) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimReflectionSugar.ExecuteMethodStringStringStringObjectArray">
            <summary>设置 ReflectionSugar.ExecuteMethod(String nameSpace, String className, String MethodName, Object[] parameters) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimReflectionSugar.GetKeyStringArray">
            <summary>设置 ReflectionSugar.GetKey(String[] keyElementArray) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimReflectionSugar.GetOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>设置 ReflectionSugar.Get(String key) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimReflectionSugar.GetPropertiesType">
            <summary>设置 ReflectionSugar.GetProperties(Type type) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimReflectionSugar.GetTypeByAssemblyAssemblyStringString">
            <summary>设置 ReflectionSugar.GetTypeByAssembly(Assembly asm, String nameSpace, String className) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimReflectionSugar.LoadFileString">
            <summary>设置 ReflectionSugar.LoadFile(String path) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimReflectionSugar.StaticConstructor">
            <summary>设置 ReflectionSugar.ReflectionSugar() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimReflectionSugar._isCacheGet">
            <summary>设置 ReflectionSugar.get__isCache() 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimRequestInfo">
            <summary>SyntacticSugar.RequestInfo 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimRequestInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimRequestInfo.#ctor(SyntacticSugar.RequestInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimRequestInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimRequestInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimRequestInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimRequestInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimRequestInfo.Constructor">
            <summary>设置 RequestInfo.RequestInfo() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimRequestInfo.ContextGet">
            <summary>设置 RequestInfo.get_Context() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimRequestInfo.DomainGet">
            <summary>设置 RequestInfo.get_Domain() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimRequestInfo.HttpDomainGet">
            <summary>设置 RequestInfo.get_HttpDomain() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimRequestInfo.HttpGet">
            <summary>设置 RequestInfo.get_Http() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimRequestInfo.PageGet">
            <summary>设置 RequestInfo.get_Page() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimRequestInfo.PhysicalPathGet">
            <summary>设置 RequestInfo.get_PhysicalPath() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimRequestInfo.QueryStringString">
            <summary>设置 RequestInfo.QueryString(String name) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimRequestInfo.RequestQueryStringGet">
            <summary>设置 RequestInfo.get_RequestQueryString() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimRequestInfo.UrlGet">
            <summary>设置 RequestInfo.get_Url() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimRequestInfo.UserAddressGet">
            <summary>设置 RequestInfo.get_UserAddress() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimRequestInfo.VirtualGet">
            <summary>设置 RequestInfo.get_Virtual() 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimRequestToModel">
            <summary>SyntacticSugar.RequestToModel 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimRequestToModel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimRequestToModel.#ctor(SyntacticSugar.RequestToModel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimRequestToModel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimRequestToModel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimRequestToModel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimRequestToModel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimRequestToModel.Constructor">
            <summary>设置 RequestToModel.RequestToModel() 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimRequestToModel.GetListByFormOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0}})">
            <summary>设置 RequestToModel.GetListByForm() 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimRequestToModel.GetListByFormOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 RequestToModel.GetListByForm(String appstr) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimRequestToModel.GetListByFormOf1StringInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Int32,System.Collections.Generic.List{``0}})">
            <summary>设置 RequestToModel.GetListByForm(String appstr, Int32 index) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimRequestToModel.GetSingleFormOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 RequestToModel.GetSingleForm() 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimRequestToModel.GetSingleFormOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>设置 RequestToModel.GetSingleForm(String appstr) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimRequestToModel.RequestParsString">
            <summary>设置 RequestToModel.RequestPars(String key) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimRequestToModel.SetListOf1StringInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Int32,System.Collections.Generic.List{``0}})">
            <summary>设置 RequestToModel.SetList(String appendstr, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimRequestToModel.StaticConstructor">
            <summary>设置 RequestToModel.RequestToModel() 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimResponseSugar">
            <summary>SyntacticSugar.ResponseSugar 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimResponseSugar.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimResponseSugar.#ctor(SyntacticSugar.ResponseSugar)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimResponseSugar.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimResponseSugar.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimResponseSugar.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimResponseSugar.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimResponseSugar.Constructor">
            <summary>设置 ResponseSugar.ResponseSugar() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimResponseSugar.ResponseBigFileStringStringInt64">
            <summary>设置 ResponseSugar.ResponseBigFile(String filePath, String fileName, Int64 speed) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimResponseSugar.ResponseFileStringString">
            <summary>设置 ResponseSugar.ResponseFile(String filePath, String fileName) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimResponseSugar._contextGet">
            <summary>设置 ResponseSugar.get__context() 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimSessionManager`1">
            <summary>SyntacticSugar.SessionManager`1 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimSessionManager`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimSessionManager`1.#ctor(SyntacticSugar.SessionManager{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimSessionManager`1.AddStringT0">
            <summary>设置 SessionManager`1.Add(String key, !0 value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimSessionManager`1.AddStringT0Int32">
            <summary>设置 SessionManager`1.Add(String key, !0 value, Int32 cacheDurationInSeconds) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimSessionManager`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimSessionManager`1.AllInstances.AddStringT0">
            <summary>设置 SessionManager`1.Add(String key, !0 value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimSessionManager`1.AllInstances.AddStringT0Int32">
            <summary>设置 SessionManager`1.Add(String key, !0 value, Int32 cacheDurationInSeconds) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimSessionManager`1.AllInstances.ContainsKeyString">
            <summary>设置 SessionManager`1.ContainsKey(String key) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimSessionManager`1.AllInstances.GetAllKey">
            <summary>设置 SessionManager`1.GetAllKey() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimSessionManager`1.AllInstances.GetString">
            <summary>设置 SessionManager`1.Get(String key) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimSessionManager`1.AllInstances.ItemGetString">
            <summary>设置 SessionManager`1.get_Item(String key) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimSessionManager`1.AllInstances.RemoveAll">
            <summary>设置 SessionManager`1.RemoveAll() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimSessionManager`1.AllInstances.RemoveAllFuncOfStringBoolean">
            <summary>设置 SessionManager`1.RemoveAll(Func`2&lt;String,Boolean&gt; removeExpression) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimSessionManager`1.AllInstances.RemoveString">
            <summary>设置 SessionManager`1.Remove(String key) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimSessionManager`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimSessionManager`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimSessionManager`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimSessionManager`1.Constructor">
            <summary>设置 SessionManager`1.SessionManager`1() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimSessionManager`1.ContainsKeyString">
            <summary>设置 SessionManager`1.ContainsKey(String key) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimSessionManager`1.GetAllKey">
            <summary>设置 SessionManager`1.GetAllKey() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimSessionManager`1.GetInstance">
            <summary>设置 SessionManager`1.GetInstance() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimSessionManager`1.GetString">
            <summary>设置 SessionManager`1.Get(String key) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimSessionManager`1.ItemGetString">
            <summary>设置 SessionManager`1.get_Item(String key) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimSessionManager`1.RemoveAll">
            <summary>设置 SessionManager`1.RemoveAll() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimSessionManager`1.RemoveAllFuncOfStringBoolean">
            <summary>设置 SessionManager`1.RemoveAll(Func`2&lt;String,Boolean&gt; removeExpression) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimSessionManager`1.RemoveString">
            <summary>设置 SessionManager`1.Remove(String key) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimSessionManager`1.StaticConstructor">
            <summary>设置 SessionManager`1.SessionManager`1() 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimStringSugar">
            <summary>SyntacticSugar.StringSugar 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimStringSugar.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimStringSugar.AppendStringStringStringStringBoolean">
            <summary>设置 StringSugar.AppendString(String value, String appendString, String symbol, Boolean valueIsNullAppendSymbol) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimStringSugar.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimStringSugar.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimStringSugar.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimStringSugar.SplitStringStringStringSplitOptions">
            <summary>设置 StringSugar.Split(String value, String splString, StringSplitOptions options) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimStringSugar.ToCutStringStringInt32String">
            <summary>设置 StringSugar.ToCutString(String value, Int32 cutLength, String appendString) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimStringSugar.ToDBCString">
            <summary>设置 StringSugar.ToDBC(String input) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimStringSugar.ToFormatStringObjectArray">
            <summary>设置 StringSugar.ToFormat(String value, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimStringSugar.ToHtmlByTextString">
            <summary>设置 StringSugar.ToHtmlByText(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimStringSugar.ToHtmlDecodeString">
            <summary>设置 StringSugar.ToHtmlDecode(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimStringSugar.ToHtmlEncodeString">
            <summary>设置 StringSugar.ToHtmlEncode(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimStringSugar.ToSBCString">
            <summary>设置 StringSugar.ToSBC(String input) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimStringSugar.ToUrlDecodeString">
            <summary>设置 StringSugar.ToUrlDecode(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimStringSugar.ToUrlDecodeWithPlusSignString">
            <summary>设置 StringSugar.ToUrlDecodeWithPlusSign(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimStringSugar.ToUrlEncodeString">
            <summary>设置 StringSugar.ToUrlEncode(String value) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimTypeParseExtenions">
            <summary>SyntacticSugar.TypeParseExtenions 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimTypeParseExtenions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimTypeParseExtenions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimTypeParseExtenions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimTypeParseExtenions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimTypeParseExtenions.JsonToModelOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>设置 TypeParseExtenions.JsonToModel(String json) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimTypeParseExtenions.ModelToJsonOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.String})">
            <summary>设置 TypeParseExtenions.ModelToJson(!!0 model) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimTypeParseExtenions.TryToBooleanObject">
            <summary>设置 TypeParseExtenions.TryToBoolean(Object thisValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimTypeParseExtenions.TryToBytesStream">
            <summary>设置 TypeParseExtenions.TryToBytes(Stream stream) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimTypeParseExtenions.TryToDataTableOf1ListOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0},System.Data.DataTable})">
            <summary>设置 TypeParseExtenions.TryToDataTable(List`1&lt;!!0&gt; list) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimTypeParseExtenions.TryToDateObject">
            <summary>设置 TypeParseExtenions.TryToDate(Object thisValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimTypeParseExtenions.TryToDateObjectDateTime">
            <summary>设置 TypeParseExtenions.TryToDate(Object thisValue, DateTime errorValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimTypeParseExtenions.TryToDecimalObject">
            <summary>设置 TypeParseExtenions.TryToDecimal(Object thisValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimTypeParseExtenions.TryToDecimalObjectDecimal">
            <summary>设置 TypeParseExtenions.TryToDecimal(Object thisValue, Decimal errorValue) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimTypeParseExtenions.TryToEnumOf1Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,``0})">
            <summary>设置 TypeParseExtenions.TryToEnum(Int32 thisValue) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimTypeParseExtenions.TryToEnumOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>设置 TypeParseExtenions.TryToEnum(String thisValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimTypeParseExtenions.TryToGuidObject">
            <summary>设置 TypeParseExtenions.TryToGuid(Object thisValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimTypeParseExtenions.TryToIntObject">
            <summary>设置 TypeParseExtenions.TryToInt(Object thisValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimTypeParseExtenions.TryToIntObjectInt32">
            <summary>设置 TypeParseExtenions.TryToInt(Object thisValue, Int32 errorValue) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimTypeParseExtenions.TryToListOf1DataTable``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.DataTable,System.Collections.Generic.List{``0}})">
            <summary>设置 TypeParseExtenions.TryToList(DataTable dt) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimTypeParseExtenions.TryToMoneyObject">
            <summary>设置 TypeParseExtenions.TryToMoney(Object thisValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimTypeParseExtenions.TryToMoneyObjectDouble">
            <summary>设置 TypeParseExtenions.TryToMoney(Object thisValue, Double errorValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimTypeParseExtenions.TryToStreamByteArray">
            <summary>设置 TypeParseExtenions.TryToStream(Byte[] bytes) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimTypeParseExtenions.TryToStringObject">
            <summary>设置 TypeParseExtenions.TryToString(Object thisValue) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimTypeParseExtenions.TryToStringObjectString">
            <summary>设置 TypeParseExtenions.TryToString(Object thisValue, String errorValue) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimUploadFile">
            <summary>SyntacticSugar.UploadFile 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimUploadFile.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimUploadFile.#ctor(SyntacticSugar.UploadFile)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimUploadFile.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.AllInstances.CheckSizeUploadFileResponseMessageHttpPostedFile">
            <summary>设置 UploadFile.CheckSize(ResponseMessage message, HttpPostedFile PostFile) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.AllInstances.CheckingTypeUploadFileResponseMessageString">
            <summary>设置 UploadFile.CheckingType(ResponseMessage message, String fileName) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.AllInstances.CommonSaveHttpPostedFile">
            <summary>设置 UploadFile.CommonSave(HttpPostedFile postFile) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.AllInstances.GetDirectoryStringRef">
            <summary>设置 UploadFile.GetDirectory(String&amp; webDir) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.AllInstances.SaveHttpPostedFile">
            <summary>设置 UploadFile.Save(HttpPostedFile postFile) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.AllInstances.SaveHttpPostedFileString">
            <summary>设置 UploadFile.Save(HttpPostedFile postFile, String number) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.AllInstances.SetFileDirectoryString">
            <summary>设置 UploadFile.SetFileDirectory(String fileDirectory) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.AllInstances.SetFileTypeString">
            <summary>设置 UploadFile.SetFileType(String fileType) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.AllInstances.SetIsRenameSameFileBoolean">
            <summary>设置 UploadFile.SetIsRenameSameFile(Boolean isRenameSameFile) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.AllInstances.SetIsUseOldFileNameBoolean">
            <summary>设置 UploadFile.SetIsUseOldFileName(Boolean isUseOldFileName) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.AllInstances.SetMaxSizeMDouble">
            <summary>设置 UploadFile.SetMaxSizeM(Double maxSizeM) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.AllInstances.TryErrorUploadFileResponseMessageString">
            <summary>设置 UploadFile.TryError(ResponseMessage message, String msg) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.AllInstances._numberGet">
            <summary>设置 UploadFile.get__number() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.AllInstances._numberSetString">
            <summary>设置 UploadFile.set__number(String value) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimUploadFile.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimUploadFile.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.CheckSizeUploadFileResponseMessageHttpPostedFile">
            <summary>设置 UploadFile.CheckSize(ResponseMessage message, HttpPostedFile PostFile) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.CheckingTypeUploadFileResponseMessageString">
            <summary>设置 UploadFile.CheckingType(ResponseMessage message, String fileName) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.CommonSaveHttpPostedFile">
            <summary>设置 UploadFile.CommonSave(HttpPostedFile postFile) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.Constructor">
            <summary>设置 UploadFile.UploadFile() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.GetDirectoryStringRef">
            <summary>设置 UploadFile.GetDirectory(String&amp; webDir) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.GetRelativePathString">
            <summary>设置 UploadFile.GetRelativePath(String fileDirectory) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.GetUrlMapPathString">
            <summary>设置 UploadFile.GetUrlMapPath(String filePath) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.SaveHttpPostedFile">
            <summary>设置 UploadFile.Save(HttpPostedFile postFile) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.SaveHttpPostedFileString">
            <summary>设置 UploadFile.Save(HttpPostedFile postFile, String number) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.SetFileDirectoryString">
            <summary>设置 UploadFile.SetFileDirectory(String fileDirectory) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.SetFileTypeString">
            <summary>设置 UploadFile.SetFileType(String fileType) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.SetIsRenameSameFileBoolean">
            <summary>设置 UploadFile.SetIsRenameSameFile(Boolean isRenameSameFile) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.SetIsUseOldFileNameBoolean">
            <summary>设置 UploadFile.SetIsUseOldFileName(Boolean isUseOldFileName) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.SetMaxSizeMDouble">
            <summary>设置 UploadFile.SetMaxSizeM(Double maxSizeM) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimUploadFile.ShimResponseMessage">
            <summary>SyntacticSugar.UploadFile+ResponseMessage 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimUploadFile.ShimResponseMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimUploadFile.ShimResponseMessage.#ctor(SyntacticSugar.UploadFile.ResponseMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimUploadFile.ShimResponseMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.ShimResponseMessage.AllInstances.ErrorGet">
            <summary>设置 ResponseMessage.get_Error() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.ShimResponseMessage.AllInstances.ErrorSetBoolean">
            <summary>设置 ResponseMessage.set_Error(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.ShimResponseMessage.AllInstances.FileNameGet">
            <summary>设置 ResponseMessage.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.ShimResponseMessage.AllInstances.FileNameSetString">
            <summary>设置 ResponseMessage.set_FileName(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.ShimResponseMessage.AllInstances.FilePathGet">
            <summary>设置 ResponseMessage.get_FilePath() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.ShimResponseMessage.AllInstances.FilePathSetString">
            <summary>设置 ResponseMessage.set_FilePath(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.ShimResponseMessage.AllInstances.MessageGet">
            <summary>设置 ResponseMessage.get_Message() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.ShimResponseMessage.AllInstances.MessageSetString">
            <summary>设置 ResponseMessage.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.ShimResponseMessage.AllInstances.WebFilePathGet">
            <summary>设置 ResponseMessage.get_WebFilePath() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.ShimResponseMessage.AllInstances.WebFilePathSetString">
            <summary>设置 ResponseMessage.set_WebFilePath(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.ShimResponseMessage.AllInstances.WebPathGet">
            <summary>设置 ResponseMessage.get_WebPath() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.ShimResponseMessage.AllInstances.WebPathSetString">
            <summary>设置 ResponseMessage.set_WebPath(String value) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimUploadFile.ShimResponseMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimUploadFile.ShimResponseMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.ShimResponseMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.ShimResponseMessage.Constructor">
            <summary>设置 ResponseMessage.ResponseMessage() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.ShimResponseMessage.ErrorGet">
            <summary>设置 ResponseMessage.get_Error() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.ShimResponseMessage.ErrorSetBoolean">
            <summary>设置 ResponseMessage.set_Error(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.ShimResponseMessage.FileNameGet">
            <summary>设置 ResponseMessage.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.ShimResponseMessage.FileNameSetString">
            <summary>设置 ResponseMessage.set_FileName(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.ShimResponseMessage.FilePathGet">
            <summary>设置 ResponseMessage.get_FilePath() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.ShimResponseMessage.FilePathSetString">
            <summary>设置 ResponseMessage.set_FilePath(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.ShimResponseMessage.MessageGet">
            <summary>设置 ResponseMessage.get_Message() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.ShimResponseMessage.MessageSetString">
            <summary>设置 ResponseMessage.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.ShimResponseMessage.WebFilePathGet">
            <summary>设置 ResponseMessage.get_WebFilePath() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.ShimResponseMessage.WebFilePathSetString">
            <summary>设置 ResponseMessage.set_WebFilePath(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.ShimResponseMessage.WebPathGet">
            <summary>设置 ResponseMessage.get_WebPath() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.ShimResponseMessage.WebPathSetString">
            <summary>设置 ResponseMessage.set_WebPath(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile.TryErrorUploadFileResponseMessageString">
            <summary>设置 UploadFile.TryError(ResponseMessage message, String msg) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile._numberGet">
            <summary>设置 UploadFile.get__number() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadFile._numberSetString">
            <summary>设置 UploadFile.set__number(String value) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimUploadImage">
            <summary>SyntacticSugar.UploadImage 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimUploadImage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimUploadImage.#ctor(SyntacticSugar.UploadImage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimUploadImage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.AttachPngStringString">
            <summary>设置 UploadImage.AttachPng(String png, String file) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.AttachTextStringString">
            <summary>设置 UploadImage.AttachText(String text, String file) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.CheckValidExtStringString">
            <summary>设置 UploadImage.CheckValidExt(String allType, String chkType) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.CompressPhotoStringInt32">
            <summary>设置 UploadImage.CompressPhoto(String FileName, Int32 size) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.CreateSmallPhotoStringInt32Int32String">
            <summary>设置 UploadImage.CreateSmallPhoto(String filename, Int32 nWidth, Int32 nHeight, String destfile) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.CreateSmallPhotoStringInt32Int32StringStringInt32">
            <summary>设置 UploadImage.CreateSmallPhoto(String filename, Int32 nWidth, Int32 nHeight, String destfile, String sy, Int32 nType) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.CreateSmallPhotoStringInt32Int32StringStringString">
            <summary>设置 UploadImage.CreateSmallPhoto(String filename, Int32 nWidth, Int32 nHeight, String destfile, String png, String text) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.CreateSmallPhotoStringInt32Int32StringStringStringUploadImageCutMode">
            <summary>设置 UploadImage.CreateSmallPhoto(String filename, Int32 nWidth, Int32 nHeight, String destfile, String png, String text, CutMode cMode) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.CutRegionInt32Int32Image">
            <summary>设置 UploadImage.CutRegion(Int32 nWidth, Int32 nHeight, Image img) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.FileCutSaveAsHttpPostedFileStringInt32Int32UploadImageCutMode">
            <summary>设置 UploadImage.FileCutSaveAs(HttpPostedFile PostedFile, String SaveFolder, Int32 oImgWidth, Int32 oImgHeight, CutMode cMode) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.FileSaveAsHttpPostedFileString">
            <summary>设置 UploadImage.FileSaveAs(HttpPostedFile PostedFile, String SaveFolder) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.GetCodeMessageInt32">
            <summary>设置 UploadImage.GetCodeMessage(Int32 code) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.GetCodecInfoString">
            <summary>设置 UploadImage.GetCodecInfo(String mimeType) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.KiSaveAsJPEGStringStringInt32">
            <summary>设置 UploadImage.KiSaveAsJPEG(String SourceFile, String FileName, Int32 Qty) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.NewSizeInt32Int32Image">
            <summary>设置 UploadImage.NewSize(Int32 nWidth, Int32 nHeight, Image img) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.SetAllowFormatGet">
            <summary>设置 UploadImage.get_SetAllowFormat() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.SetAllowFormatSetString">
            <summary>设置 UploadImage.set_SetAllowFormat(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.SetAllowSizeGet">
            <summary>设置 UploadImage.get_SetAllowSize() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.SetAllowSizeSetDouble">
            <summary>设置 UploadImage.set_SetAllowSize(Double value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.SetCutImageGet">
            <summary>设置 UploadImage.get_SetCutImage() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.SetCutImageSetBoolean">
            <summary>设置 UploadImage.set_SetCutImage(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.SetLimitWidthGet">
            <summary>设置 UploadImage.get_SetLimitWidth() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.SetLimitWidthSetBoolean">
            <summary>设置 UploadImage.set_SetLimitWidth(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.SetMaxWidthGet">
            <summary>设置 UploadImage.get_SetMaxWidth() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.SetMaxWidthSetInt32">
            <summary>设置 UploadImage.set_SetMaxWidth(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.SetMinWidthGet">
            <summary>设置 UploadImage.get_SetMinWidth() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.SetMinWidthSetInt32">
            <summary>设置 UploadImage.set_SetMinWidth(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.SetPicWaterGet">
            <summary>设置 UploadImage.get_SetPicWater() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.SetPicWaterSetString">
            <summary>设置 UploadImage.set_SetPicWater(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.SetPositionWaterGet">
            <summary>设置 UploadImage.get_SetPositionWater() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.SetPositionWaterSetInt32">
            <summary>设置 UploadImage.set_SetPositionWater(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.SetSmallImgHeightGet">
            <summary>设置 UploadImage.get_SetSmallImgHeight() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.SetSmallImgHeightSetString">
            <summary>设置 UploadImage.set_SetSmallImgHeight(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.SetSmallImgWidthGet">
            <summary>设置 UploadImage.get_SetSmallImgWidth() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.SetSmallImgWidthSetString">
            <summary>设置 UploadImage.set_SetSmallImgWidth(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.SetWordWaterGet">
            <summary>设置 UploadImage.get_SetWordWater() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.SetWordWaterSetString">
            <summary>设置 UploadImage.set_SetWordWater(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.TryErrorUploadImageResponseMessageInt32">
            <summary>设置 UploadImage.TryError(ResponseMessage rm, Int32 code) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AllInstances.TryErrorUploadImageResponseMessageString">
            <summary>设置 UploadImage.TryError(ResponseMessage rm, String message) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AttachPngStringString">
            <summary>设置 UploadImage.AttachPng(String png, String file) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.AttachTextStringString">
            <summary>设置 UploadImage.AttachText(String text, String file) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimUploadImage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimUploadImage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.CheckValidExtStringString">
            <summary>设置 UploadImage.CheckValidExt(String allType, String chkType) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.CompressPhotoStringInt32">
            <summary>设置 UploadImage.CompressPhoto(String FileName, Int32 size) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.Constructor">
            <summary>设置 UploadImage.UploadImage() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.CreateSmallPhotoStringInt32Int32String">
            <summary>设置 UploadImage.CreateSmallPhoto(String filename, Int32 nWidth, Int32 nHeight, String destfile) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.CreateSmallPhotoStringInt32Int32StringStringInt32">
            <summary>设置 UploadImage.CreateSmallPhoto(String filename, Int32 nWidth, Int32 nHeight, String destfile, String sy, Int32 nType) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.CreateSmallPhotoStringInt32Int32StringStringString">
            <summary>设置 UploadImage.CreateSmallPhoto(String filename, Int32 nWidth, Int32 nHeight, String destfile, String png, String text) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.CreateSmallPhotoStringInt32Int32StringStringStringUploadImageCutMode">
            <summary>设置 UploadImage.CreateSmallPhoto(String filename, Int32 nWidth, Int32 nHeight, String destfile, String png, String text, CutMode cMode) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.CutRegionInt32Int32Image">
            <summary>设置 UploadImage.CutRegion(Int32 nWidth, Int32 nHeight, Image img) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.FileCutSaveAsHttpPostedFileStringInt32Int32UploadImageCutMode">
            <summary>设置 UploadImage.FileCutSaveAs(HttpPostedFile PostedFile, String SaveFolder, Int32 oImgWidth, Int32 oImgHeight, CutMode cMode) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.FileSaveAsHttpPostedFileString">
            <summary>设置 UploadImage.FileSaveAs(HttpPostedFile PostedFile, String SaveFolder) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.GetCodeMessageInt32">
            <summary>设置 UploadImage.GetCodeMessage(Int32 code) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.GetCodecInfoString">
            <summary>设置 UploadImage.GetCodecInfo(String mimeType) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.KiSaveAsJPEGStringStringInt32">
            <summary>设置 UploadImage.KiSaveAsJPEG(String SourceFile, String FileName, Int32 Qty) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.NewSizeInt32Int32Image">
            <summary>设置 UploadImage.NewSize(Int32 nWidth, Int32 nHeight, Image img) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.SetAllowFormatGet">
            <summary>设置 UploadImage.get_SetAllowFormat() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.SetAllowFormatSetString">
            <summary>设置 UploadImage.set_SetAllowFormat(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.SetAllowSizeGet">
            <summary>设置 UploadImage.get_SetAllowSize() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.SetAllowSizeSetDouble">
            <summary>设置 UploadImage.set_SetAllowSize(Double value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.SetCutImageGet">
            <summary>设置 UploadImage.get_SetCutImage() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.SetCutImageSetBoolean">
            <summary>设置 UploadImage.set_SetCutImage(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.SetLimitWidthGet">
            <summary>设置 UploadImage.get_SetLimitWidth() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.SetLimitWidthSetBoolean">
            <summary>设置 UploadImage.set_SetLimitWidth(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.SetMaxWidthGet">
            <summary>设置 UploadImage.get_SetMaxWidth() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.SetMaxWidthSetInt32">
            <summary>设置 UploadImage.set_SetMaxWidth(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.SetMinWidthGet">
            <summary>设置 UploadImage.get_SetMinWidth() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.SetMinWidthSetInt32">
            <summary>设置 UploadImage.set_SetMinWidth(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.SetPicWaterGet">
            <summary>设置 UploadImage.get_SetPicWater() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.SetPicWaterSetString">
            <summary>设置 UploadImage.set_SetPicWater(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.SetPositionWaterGet">
            <summary>设置 UploadImage.get_SetPositionWater() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.SetPositionWaterSetInt32">
            <summary>设置 UploadImage.set_SetPositionWater(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.SetSmallImgHeightGet">
            <summary>设置 UploadImage.get_SetSmallImgHeight() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.SetSmallImgHeightSetString">
            <summary>设置 UploadImage.set_SetSmallImgHeight(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.SetSmallImgWidthGet">
            <summary>设置 UploadImage.get_SetSmallImgWidth() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.SetSmallImgWidthSetString">
            <summary>设置 UploadImage.set_SetSmallImgWidth(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.SetWordWaterGet">
            <summary>设置 UploadImage.get_SetWordWater() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.SetWordWaterSetString">
            <summary>设置 UploadImage.set_SetWordWater(String value) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage">
            <summary>SyntacticSugar.UploadImage+ResponseMessage 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.#ctor(SyntacticSugar.UploadImage.ResponseMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.AllInstances.DirectoryGet">
            <summary>设置 ResponseMessage.get_Directory() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.AllInstances.FileNameGet">
            <summary>设置 ResponseMessage.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.AllInstances.FileNameSetString">
            <summary>设置 ResponseMessage.set_FileName(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.AllInstances.IsErrorGet">
            <summary>设置 ResponseMessage.get_IsError() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.AllInstances.IsErrorSetBoolean">
            <summary>设置 ResponseMessage.set_IsError(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.AllInstances.MessageGet">
            <summary>设置 ResponseMessage.get_Message() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.AllInstances.MessageSetString">
            <summary>设置 ResponseMessage.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.AllInstances.SizeGet">
            <summary>设置 ResponseMessage.get_Size() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.AllInstances.SizeSetDouble">
            <summary>设置 ResponseMessage.set_Size(Double value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.AllInstances.SmallPathInt32">
            <summary>设置 ResponseMessage.SmallPath(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.AllInstances.WebFilePathGet">
            <summary>设置 ResponseMessage.get_WebFilePath() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.AllInstances.WebFilePathSetString">
            <summary>设置 ResponseMessage.set_WebFilePath(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.AllInstances.WebPathGet">
            <summary>设置 ResponseMessage.get_WebPath() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.AllInstances.WebPathSetString">
            <summary>设置 ResponseMessage.set_WebPath(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.AllInstances.filePathGet">
            <summary>设置 ResponseMessage.get_filePath() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.AllInstances.filePathSetString">
            <summary>设置 ResponseMessage.set_filePath(String value) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.Constructor">
            <summary>设置 ResponseMessage.ResponseMessage() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.DirectoryGet">
            <summary>设置 ResponseMessage.get_Directory() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.FileNameGet">
            <summary>设置 ResponseMessage.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.FileNameSetString">
            <summary>设置 ResponseMessage.set_FileName(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.IsErrorGet">
            <summary>设置 ResponseMessage.get_IsError() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.IsErrorSetBoolean">
            <summary>设置 ResponseMessage.set_IsError(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.MessageGet">
            <summary>设置 ResponseMessage.get_Message() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.MessageSetString">
            <summary>设置 ResponseMessage.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.SizeGet">
            <summary>设置 ResponseMessage.get_Size() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.SizeSetDouble">
            <summary>设置 ResponseMessage.set_Size(Double value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.SmallPathInt32">
            <summary>设置 ResponseMessage.SmallPath(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.WebFilePathGet">
            <summary>设置 ResponseMessage.get_WebFilePath() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.WebFilePathSetString">
            <summary>设置 ResponseMessage.set_WebFilePath(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.WebPathGet">
            <summary>设置 ResponseMessage.get_WebPath() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.WebPathSetString">
            <summary>设置 ResponseMessage.set_WebPath(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.filePathGet">
            <summary>设置 ResponseMessage.get_filePath() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.ShimResponseMessage.filePathSetString">
            <summary>设置 ResponseMessage.set_filePath(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.TryErrorUploadImageResponseMessageInt32">
            <summary>设置 UploadImage.TryError(ResponseMessage rm, Int32 code) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimUploadImage.TryErrorUploadImageResponseMessageString">
            <summary>设置 UploadImage.TryError(ResponseMessage rm, String message) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimValidationSugar">
            <summary>SyntacticSugar.ValidationSugar 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimValidationSugar.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimValidationSugar.#ctor(SyntacticSugar.ValidationSugar)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimValidationSugar.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimValidationSugar.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimValidationSugar.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.Constructor">
            <summary>设置 ValidationSugar.ValidationSugar() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.CreateOptionItem">
            <summary>设置 ValidationSugar.CreateOptionItem() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.GetBindScriptStringAction">
            <summary>设置 ValidationSugar.GetBindScript(String pageKey, Action init) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.InitStringValidationSugarOptionItemArray">
            <summary>设置 ValidationSugar.Init(String pageKey, OptionItem[] itemList) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.PostValidationStringStringOutAction">
            <summary>设置 ValidationSugar.PostValidation(String pageKey, String&amp; errorMessage, Action init) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItem">
            <summary>SyntacticSugar.ValidationSugar+OptionItem 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItem.#ctor(SyntacticSugar.ValidationSugar.OptionItem)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItem.AllInstances.FormFiledNameGet">
            <summary>设置 OptionItem.get_FormFiledName() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItem.AllInstances.FormFiledNameSetString">
            <summary>设置 OptionItem.set_FormFiledName(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItem.AllInstances.IsMultiselectGet">
            <summary>设置 OptionItem.get_IsMultiselect() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItem.AllInstances.IsMultiselectSetBoolean">
            <summary>设置 OptionItem.set_IsMultiselect(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItem.AllInstances.IsRequiredGet">
            <summary>设置 OptionItem.get_IsRequired() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItem.AllInstances.IsRequiredSetBoolean">
            <summary>设置 OptionItem.set_IsRequired(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItem.AllInstances.PlaceholderGet">
            <summary>设置 OptionItem.get_Placeholder() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItem.AllInstances.PlaceholderSetString">
            <summary>设置 OptionItem.set_Placeholder(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItem.AllInstances.TypeParamsGet">
            <summary>设置 OptionItem.get_TypeParams() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItem.AllInstances.TypeParamsSetListOfValidationSugarOptionItemTypeParams">
            <summary>设置 OptionItem.set_TypeParams(List`1&lt;OptionItemTypeParams&gt; value) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItem.Constructor">
            <summary>设置 OptionItem.OptionItem() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItem.FormFiledNameGet">
            <summary>设置 OptionItem.get_FormFiledName() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItem.FormFiledNameSetString">
            <summary>设置 OptionItem.set_FormFiledName(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItem.IsMultiselectGet">
            <summary>设置 OptionItem.get_IsMultiselect() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItem.IsMultiselectSetBoolean">
            <summary>设置 OptionItem.set_IsMultiselect(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItem.IsRequiredGet">
            <summary>设置 OptionItem.get_IsRequired() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItem.IsRequiredSetBoolean">
            <summary>设置 OptionItem.set_IsRequired(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItem.PlaceholderGet">
            <summary>设置 OptionItem.get_Placeholder() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItem.PlaceholderSetString">
            <summary>设置 OptionItem.set_Placeholder(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItem.TypeParamsGet">
            <summary>设置 OptionItem.get_TypeParams() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItem.TypeParamsSetListOfValidationSugarOptionItemTypeParams">
            <summary>设置 OptionItem.set_TypeParams(List`1&lt;OptionItemTypeParams&gt; value) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItemTypeParams">
            <summary>SyntacticSugar.ValidationSugar+OptionItemTypeParams 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItemTypeParams.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItemTypeParams.#ctor(SyntacticSugar.ValidationSugar.OptionItemTypeParams)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItemTypeParams.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItemTypeParams.AllInstances.FuncGet">
            <summary>设置 OptionItemTypeParams.get_Func() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItemTypeParams.AllInstances.FuncSetString">
            <summary>设置 OptionItemTypeParams.set_Func(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItemTypeParams.AllInstances.PatternGet">
            <summary>设置 OptionItemTypeParams.get_Pattern() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItemTypeParams.AllInstances.PatternSetString">
            <summary>设置 OptionItemTypeParams.set_Pattern(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItemTypeParams.AllInstances.TipGet">
            <summary>设置 OptionItemTypeParams.get_Tip() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItemTypeParams.AllInstances.TipSetString">
            <summary>设置 OptionItemTypeParams.set_Tip(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItemTypeParams.AllInstances.TypeGet">
            <summary>设置 OptionItemTypeParams.get_Type() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItemTypeParams.AllInstances.TypeSetValidationSugarOptionItemType">
            <summary>设置 OptionItemTypeParams.set_Type(OptionItemType value) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItemTypeParams.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItemTypeParams.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItemTypeParams.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItemTypeParams.Constructor">
            <summary>设置 OptionItemTypeParams.OptionItemTypeParams() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItemTypeParams.FuncGet">
            <summary>设置 OptionItemTypeParams.get_Func() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItemTypeParams.FuncSetString">
            <summary>设置 OptionItemTypeParams.set_Func(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItemTypeParams.PatternGet">
            <summary>设置 OptionItemTypeParams.get_Pattern() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItemTypeParams.PatternSetString">
            <summary>设置 OptionItemTypeParams.set_Pattern(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItemTypeParams.TipGet">
            <summary>设置 OptionItemTypeParams.get_Tip() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItemTypeParams.TipSetString">
            <summary>设置 OptionItemTypeParams.set_Tip(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItemTypeParams.TypeGet">
            <summary>设置 OptionItemTypeParams.get_Type() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimOptionItemTypeParams.TypeSetValidationSugarOptionItemType">
            <summary>设置 OptionItemTypeParams.set_Type(OptionItemType value) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimValidationSugar.ShimValidationOption">
            <summary>SyntacticSugar.ValidationSugar+ValidationOption 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimValidationSugar.ShimValidationOption.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimValidationSugar.ShimValidationOption.#ctor(SyntacticSugar.ValidationSugar.ValidationOption)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimValidationSugar.ShimValidationOption.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimValidationOption.AllInstances.ItemListGet">
            <summary>设置 ValidationOption.get_ItemList() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimValidationOption.AllInstances.ItemListSetListOfValidationSugarOptionItem">
            <summary>设置 ValidationOption.set_ItemList(List`1&lt;OptionItem&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimValidationOption.AllInstances.PageKeyGet">
            <summary>设置 ValidationOption.get_PageKey() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimValidationOption.AllInstances.PageKeySetString">
            <summary>设置 ValidationOption.set_PageKey(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimValidationOption.AllInstances.ScriptGet">
            <summary>设置 ValidationOption.get_Script() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimValidationOption.AllInstances.ScriptSetString">
            <summary>设置 ValidationOption.set_Script(String value) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimValidationSugar.ShimValidationOption.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimValidationSugar.ShimValidationOption.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimValidationOption.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimValidationOption.Constructor">
            <summary>设置 ValidationOption.ValidationOption() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimValidationOption.ItemListGet">
            <summary>设置 ValidationOption.get_ItemList() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimValidationOption.ItemListSetListOfValidationSugarOptionItem">
            <summary>设置 ValidationOption.set_ItemList(List`1&lt;OptionItem&gt; value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimValidationOption.PageKeyGet">
            <summary>设置 ValidationOption.get_PageKey() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimValidationOption.PageKeySetString">
            <summary>设置 ValidationOption.set_PageKey(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimValidationOption.ScriptGet">
            <summary>设置 ValidationOption.get_Script() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.ShimValidationOption.ScriptSetString">
            <summary>设置 ValidationOption.set_Script(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugar.StaticConstructor">
            <summary>设置 ValidationSugar.ValidationSugar() 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimValidationSugarExtension">
            <summary>SyntacticSugar.ValidationSugarExtension 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimValidationSugarExtension.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugarExtension.AddFuncValidationSugarOptionItemModelStringString">
            <summary>设置 ValidationSugarExtension.AddFunc(ValidationSugarOptionItemModel thisValue, String func, String tip) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugarExtension.AddRegexValidationSugarOptionItemModelStringString">
            <summary>设置 ValidationSugarExtension.AddRegex(ValidationSugarOptionItemModel thisValue, String pattern, String tip) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugarExtension.AddValidationSugarOptionItemModelValidationSugarOptionItemTypeString">
            <summary>设置 ValidationSugarExtension.Add(ValidationSugarOptionItemModel thisValue, OptionItemType type, String tip) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimValidationSugarExtension.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimValidationSugarExtension.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugarExtension.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugarExtension.SetInitScriptModelStringBooleanStringBoolean">
            <summary>设置 ValidationSugarExtension.Set(InitScriptModel thisValue, String formFiledName, Boolean isRequired, String placeholder, Boolean isMultiselect) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugarExtension.ToOptionItemValidationSugarOptionItemModel">
            <summary>设置 ValidationSugarExtension.ToOptionItem(ValidationSugarOptionItemModel thisValue) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimValidationSugarOptionItemModel">
            <summary>SyntacticSugar.ValidationSugarOptionItemModel 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimValidationSugarOptionItemModel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimValidationSugarOptionItemModel.#ctor(SyntacticSugar.ValidationSugarOptionItemModel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimValidationSugarOptionItemModel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugarOptionItemModel.AllInstances.ItemOptionGet">
            <summary>设置 ValidationSugarOptionItemModel.get_ItemOption() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugarOptionItemModel.AllInstances.ItemOptionSetValidationSugarOptionItem">
            <summary>设置 ValidationSugarOptionItemModel.set_ItemOption(OptionItem value) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimValidationSugarOptionItemModel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimValidationSugarOptionItemModel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugarOptionItemModel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugarOptionItemModel.Constructor">
            <summary>设置 ValidationSugarOptionItemModel.ValidationSugarOptionItemModel() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugarOptionItemModel.ItemOptionGet">
            <summary>设置 ValidationSugarOptionItemModel.get_ItemOption() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimValidationSugarOptionItemModel.ItemOptionSetValidationSugarOptionItem">
            <summary>设置 ValidationSugarOptionItemModel.set_ItemOption(OptionItem value) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimVerifyCodeSugar">
            <summary>SyntacticSugar.VerifyCodeSugar 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimVerifyCodeSugar.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimVerifyCodeSugar.#ctor(SyntacticSugar.VerifyCodeSugar)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimVerifyCodeSugar.AddBackgroundNoisePointBitmapGraphics">
            <summary>设置 VerifyCodeSugar.AddBackgroundNoisePoint(Bitmap objBitmap, Graphics objGraphics) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimVerifyCodeSugar.AddForeNoisePointBitmap">
            <summary>设置 VerifyCodeSugar.AddForeNoisePoint(Bitmap objBitmap) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimVerifyCodeSugar.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimVerifyCodeSugar.AllInstances.AddBackgroundNoisePointBitmapGraphics">
            <summary>设置 VerifyCodeSugar.AddBackgroundNoisePoint(Bitmap objBitmap, Graphics objGraphics) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimVerifyCodeSugar.AllInstances.AddForeNoisePointBitmap">
            <summary>设置 VerifyCodeSugar.AddForeNoisePoint(Bitmap objBitmap) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimVerifyCodeSugar.AllInstances.GetQuestionDictionaryOfStringString">
            <summary>设置 VerifyCodeSugar.GetQuestion(Dictionary`2&lt;String,String&gt; questionList) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimVerifyCodeSugar.AllInstances.GetRandomColor">
            <summary>设置 VerifyCodeSugar.GetRandomColor() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimVerifyCodeSugar.AllInstances.GetVerifyCodeImage">
            <summary>设置 VerifyCodeSugar.GetVerifyCodeImage() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimVerifyCodeSugar.AllInstances.GetVerifyCodeText">
            <summary>设置 VerifyCodeSugar.GetVerifyCodeText() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimVerifyCodeSugar.AllInstances.OutputImageHttpResponse">
            <summary>设置 VerifyCodeSugar.OutputImage(HttpResponse objHttpResponse) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimVerifyCodeSugar.AllInstances.SetHeightGet">
            <summary>设置 VerifyCodeSugar.get_SetHeight() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimVerifyCodeSugar.AllInstances.SetVerifyCodeTextGet">
            <summary>设置 VerifyCodeSugar.get_SetVerifyCodeText() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimVerifyCodeSugar.AllInstances.SetVerifyCodeTextSetString">
            <summary>设置 VerifyCodeSugar.set_SetVerifyCodeText(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimVerifyCodeSugar.AllInstances.SetWithGet">
            <summary>设置 VerifyCodeSugar.get_SetWith() 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimVerifyCodeSugar.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimVerifyCodeSugar.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimVerifyCodeSugar.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimVerifyCodeSugar.Constructor">
            <summary>设置 VerifyCodeSugar.VerifyCodeSugar() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimVerifyCodeSugar.GetQuestionDictionaryOfStringString">
            <summary>设置 VerifyCodeSugar.GetQuestion(Dictionary`2&lt;String,String&gt; questionList) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimVerifyCodeSugar.GetRandomColor">
            <summary>设置 VerifyCodeSugar.GetRandomColor() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimVerifyCodeSugar.GetVerifyCodeImage">
            <summary>设置 VerifyCodeSugar.GetVerifyCodeImage() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimVerifyCodeSugar.GetVerifyCodeText">
            <summary>设置 VerifyCodeSugar.GetVerifyCodeText() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimVerifyCodeSugar.OutputImageHttpResponse">
            <summary>设置 VerifyCodeSugar.OutputImage(HttpResponse objHttpResponse) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimVerifyCodeSugar.SetHeightGet">
            <summary>设置 VerifyCodeSugar.get_SetHeight() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimVerifyCodeSugar.SetVerifyCodeTextGet">
            <summary>设置 VerifyCodeSugar.get_SetVerifyCodeText() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimVerifyCodeSugar.SetVerifyCodeTextSetString">
            <summary>设置 VerifyCodeSugar.set_SetVerifyCodeText(String value) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimVerifyCodeSugar.SetWithGet">
            <summary>设置 VerifyCodeSugar.get_SetWith() 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimWebRequestSugar">
            <summary>SyntacticSugar.WebRequestSugar 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimWebRequestSugar.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimWebRequestSugar.#ctor(SyntacticSugar.WebRequestSugar)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.AddHeadersHttpWebRequest">
            <summary>设置 WebRequestSugar.AddHeaders(HttpWebRequest request) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimWebRequestSugar.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.AllInstances.AddHeadersHttpWebRequest">
            <summary>设置 WebRequestSugar.AddHeaders(HttpWebRequest request) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.AllInstances.GetResponseImageString">
            <summary>设置 WebRequestSugar.GetResponseImage(String url) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.AllInstances.GetStringByRegexStringString">
            <summary>设置 WebRequestSugar.GetStringByRegex(String html, String pattern) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.AllInstances.HttpGetString">
            <summary>设置 WebRequestSugar.HttpGet(String url) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.AllInstances.HttpGetStringDictionaryOfStringString">
            <summary>设置 WebRequestSugar.HttpGet(String url, Dictionary`2&lt;String,String&gt; querydata) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.AllInstances.HttpPostStringDictionaryOfStringString">
            <summary>设置 WebRequestSugar.HttpPost(String url, Dictionary`2&lt;String,String&gt; postdata) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.AllInstances.HttpUploadFileStringStringArrayDictionaryOfStringString">
            <summary>设置 WebRequestSugar.HttpUploadFile(String url, String[] files, Dictionary`2&lt;String,String&gt; postdata) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.AllInstances.HttpUploadFileStringStringDictionaryOfStringString">
            <summary>设置 WebRequestSugar.HttpUploadFile(String url, String file, Dictionary`2&lt;String,String&gt; postdata) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.AllInstances.SetAcceptString">
            <summary>设置 WebRequestSugar.SetAccept(String accept) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.AllInstances.SetCertificatePolicy">
            <summary>设置 WebRequestSugar.SetCertificatePolicy() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.AllInstances.SetContentTypeString">
            <summary>设置 WebRequestSugar.SetContentType(String contentType) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.AllInstances.SetCookieCookieContainer">
            <summary>设置 WebRequestSugar.SetCookie(CookieContainer cookie) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.AllInstances.SetHeaderItemsDictionaryOfStringString">
            <summary>设置 WebRequestSugar.SetHeaderItems(Dictionary`2&lt;String,String&gt; headers) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.AllInstances.SetIsAllowAutoRedirectBoolean">
            <summary>设置 WebRequestSugar.SetIsAllowAutoRedirect(Boolean allowAutoRedirect) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.AllInstances.SetTimeOutInt32">
            <summary>设置 WebRequestSugar.SetTimeOut(Int32 time) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.AllInstances.SetUserAgentString">
            <summary>设置 WebRequestSugar.SetUserAgent(String userAgent) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.AllInstances.VerifyResponseHtmlStringString">
            <summary>设置 WebRequestSugar.VerifyResponseHtml(String html, String pattern) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimWebRequestSugar.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimWebRequestSugar.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.Constructor">
            <summary>设置 WebRequestSugar.WebRequestSugar() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.GetResponseImageString">
            <summary>设置 WebRequestSugar.GetResponseImage(String url) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.GetStringByRegexStringString">
            <summary>设置 WebRequestSugar.GetStringByRegex(String html, String pattern) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.HttpGetString">
            <summary>设置 WebRequestSugar.HttpGet(String url) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.HttpGetStringDictionaryOfStringString">
            <summary>设置 WebRequestSugar.HttpGet(String url, Dictionary`2&lt;String,String&gt; querydata) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.HttpPostStringDictionaryOfStringString">
            <summary>设置 WebRequestSugar.HttpPost(String url, Dictionary`2&lt;String,String&gt; postdata) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.HttpUploadFileStringStringArrayDictionaryOfStringString">
            <summary>设置 WebRequestSugar.HttpUploadFile(String url, String[] files, Dictionary`2&lt;String,String&gt; postdata) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.HttpUploadFileStringStringDictionaryOfStringString">
            <summary>设置 WebRequestSugar.HttpUploadFile(String url, String file, Dictionary`2&lt;String,String&gt; postdata) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.SetAcceptString">
            <summary>设置 WebRequestSugar.SetAccept(String accept) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.SetCertificatePolicy">
            <summary>设置 WebRequestSugar.SetCertificatePolicy() 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.SetContentTypeString">
            <summary>设置 WebRequestSugar.SetContentType(String contentType) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.SetCookieCookieContainer">
            <summary>设置 WebRequestSugar.SetCookie(CookieContainer cookie) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.SetHeaderItemsDictionaryOfStringString">
            <summary>设置 WebRequestSugar.SetHeaderItems(Dictionary`2&lt;String,String&gt; headers) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.SetIsAllowAutoRedirectBoolean">
            <summary>设置 WebRequestSugar.SetIsAllowAutoRedirect(Boolean allowAutoRedirect) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.SetTimeOutInt32">
            <summary>设置 WebRequestSugar.SetTimeOut(Int32 time) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.SetUserAgentString">
            <summary>设置 WebRequestSugar.SetUserAgent(String userAgent) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar.VerifyResponseHtmlStringString">
            <summary>设置 WebRequestSugar.VerifyResponseHtml(String html, String pattern) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar._HttpGetb__2KeyValuePairOfStringString">
            <summary>设置 WebRequestSugar.&lt;HttpGet&gt;b__2(KeyValuePair`2&lt;String,String&gt; it) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimWebRequestSugar._HttpPostb__0KeyValuePairOfStringString">
            <summary>设置 WebRequestSugar.&lt;HttpPost&gt;b__0(KeyValuePair`2&lt;String,String&gt; it) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimXHtmlElement">
            <summary>SyntacticSugar.XHtmlElement 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimXHtmlElement.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimXHtmlElement.#ctor(SyntacticSugar.XHtmlElement)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimXHtmlElement.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimXHtmlElement.AllInstances.DescendantsString">
            <summary>设置 XHtmlElement.Descendants(String elementName) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimXHtmlElement.AllInstances.GetDescendantsSourceListOfHtmlInfoString">
            <summary>设置 XHtmlElement.GetDescendantsSource(List`1&lt;HtmlInfo&gt; allList, String elementName) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimXHtmlElement.AllInstances.GetElementStringStringStringStringInt32">
            <summary>设置 XHtmlElement.GetElementString(String html, String currentTagBeginReg, String currentTagEndReg, Int32 i) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimXHtmlElement.AllInstances.GetElementsStringListStringListOfStringRef">
            <summary>设置 XHtmlElement.GetElementsStringList(String html, List`1&lt;String&gt;&amp; eleList) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimXHtmlElement.AllInstances.GetRegNextByNumStringStringStringInt32">
            <summary>设置 XHtmlElement.GetRegNextByNum(String val, String currentTagBeginReg, String currentTagEndReg, Int32 i) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimXHtmlElement.AllInstances.RootDescendantsString">
            <summary>设置 XHtmlElement.RootDescendants(String html) 的 填充码</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimXHtmlElement.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimXHtmlElement.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimXHtmlElement.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimXHtmlElement.ConstructorString">
            <summary>设置 XHtmlElement.XHtmlElement(String html) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimXHtmlElement.DescendantsString">
            <summary>设置 XHtmlElement.Descendants(String elementName) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimXHtmlElement.GetDescendantsSourceListOfHtmlInfoString">
            <summary>设置 XHtmlElement.GetDescendantsSource(List`1&lt;HtmlInfo&gt; allList, String elementName) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimXHtmlElement.GetElementStringStringStringStringInt32">
            <summary>设置 XHtmlElement.GetElementString(String html, String currentTagBeginReg, String currentTagEndReg, Int32 i) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimXHtmlElement.GetElementsStringListStringListOfStringRef">
            <summary>设置 XHtmlElement.GetElementsStringList(String html, List`1&lt;String&gt;&amp; eleList) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimXHtmlElement.GetRegNextByNumStringStringStringInt32">
            <summary>设置 XHtmlElement.GetRegNextByNum(String val, String currentTagBeginReg, String currentTagEndReg, Int32 i) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimXHtmlElement.RootDescendantsString">
            <summary>设置 XHtmlElement.RootDescendants(String html) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimXHtmlElement._GetElementStringb__9Match">
            <summary>设置 XHtmlElement.&lt;GetElementString&gt;b__9(Match c) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimXHtmlElement._GetElementStringb__aMatch">
            <summary>设置 XHtmlElement.&lt;GetElementString&gt;b__a(Match c) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.ShimXHtmlElementExtendsion">
            <summary>SyntacticSugar.XHtmlElementExtendsion 的填充码类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimXHtmlElementExtendsion.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimXHtmlElementExtendsion.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.ShimXHtmlElementExtendsion.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimXHtmlElementExtendsion.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimXHtmlElementExtendsion.ChildDescendantsIEnumerableOfHtmlInfoString">
            <summary>设置 XHtmlElementExtendsion.ChildDescendants(IEnumerable`1&lt;HtmlInfo&gt; htmlInfoList, String elementName) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimXHtmlElementExtendsion.DescendantsIEnumerableOfHtmlInfoString">
            <summary>设置 XHtmlElementExtendsion.Descendants(IEnumerable`1&lt;HtmlInfo&gt; htmlInfoList, String elementName) 的 填充码</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.ShimXHtmlElementExtendsion.ParentDescendantIEnumerableOfHtmlInfoString">
            <summary>设置 XHtmlElementExtendsion.ParentDescendant(IEnumerable`1&lt;HtmlInfo&gt; htmlInfoList, String fullHtml) 的 填充码</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.StubClassGenerating">
            <summary>SyntacticSugar.ClassGenerating 的存根类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubClassGenerating.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubClassGenerating.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubClassGenerating.InitializeStub">
            <summary>初始化 type StubClassGenerating 的新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubClassGenerating.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubClassGenerating.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.StubConfigSugar">
            <summary>SyntacticSugar.ConfigSugar 的存根类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubConfigSugar.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubConfigSugar.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubConfigSugar.InitializeStub">
            <summary>初始化 type StubConfigSugar 的新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubConfigSugar.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubConfigSugar.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.StubCookiesManager`1">
            <summary>SyntacticSugar.CookiesManager`1 的存根类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubCookiesManager`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubCookiesManager`1.Add(System.String,`0)">
            <summary>设置 CookiesManager`1.Add(String key, !0 value) 的 存根</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubCookiesManager`1.Add(System.String,`0,System.Int32)">
            <summary>设置 CookiesManager`1.Add(String key, !0 value, Int32 cookiesDurationInSeconds) 的 存根</summary>
        </member>
        <member name="F:SyntacticSugar.Fakes.StubCookiesManager`1.AddStringT0">
            <summary>设置 CookiesManager`1.Add(String key, !0 value) 的 stub</summary>
        </member>
        <member name="F:SyntacticSugar.Fakes.StubCookiesManager`1.AddStringT0Int32">
            <summary>设置 CookiesManager`1.Add(String key, !0 value, Int32 cookiesDurationInSeconds) 的 stub</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubCookiesManager`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubCookiesManager`1.ContainsKey(System.String)">
            <summary>设置 CookiesManager`1.ContainsKey(String key) 的 存根</summary>
        </member>
        <member name="F:SyntacticSugar.Fakes.StubCookiesManager`1.ContainsKeyString">
            <summary>设置 CookiesManager`1.ContainsKey(String key) 的 stub</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubCookiesManager`1.Get(System.String)">
            <summary>设置 CookiesManager`1.Get(String key) 的 存根</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubCookiesManager`1.GetAllKey">
            <summary>设置 CookiesManager`1.GetAllKey() 的 存根</summary>
        </member>
        <member name="F:SyntacticSugar.Fakes.StubCookiesManager`1.GetAllKey01">
            <summary>设置 CookiesManager`1.GetAllKey() 的 stub</summary>
        </member>
        <member name="F:SyntacticSugar.Fakes.StubCookiesManager`1.GetString">
            <summary>设置 CookiesManager`1.Get(String key) 的 stub</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubCookiesManager`1.InitializeStub">
            <summary>初始化 type StubCookiesManager 的新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubCookiesManager`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubCookiesManager`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubCookiesManager`1.Item(System.String)">
            <summary>设置 CookiesManager`1.get_Item(String key) 的 stub</summary>
        </member>
        <member name="F:SyntacticSugar.Fakes.StubCookiesManager`1.ItemGetString">
            <summary>设置 CookiesManager`1.get_Item(String key) 的 stub</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubCookiesManager`1.Remove(System.String)">
            <summary>设置 CookiesManager`1.Remove(String key) 的 存根</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubCookiesManager`1.RemoveAll">
            <summary>设置 CookiesManager`1.RemoveAll() 的 存根</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubCookiesManager`1.RemoveAll(System.Func{System.String,System.Boolean})">
            <summary>设置 CookiesManager`1.RemoveAll(Func`2&lt;String,Boolean&gt; removeExpression) 的 存根</summary>
        </member>
        <member name="F:SyntacticSugar.Fakes.StubCookiesManager`1.RemoveAll01">
            <summary>设置 CookiesManager`1.RemoveAll() 的 stub</summary>
        </member>
        <member name="F:SyntacticSugar.Fakes.StubCookiesManager`1.RemoveAllFuncOfStringBoolean">
            <summary>设置 CookiesManager`1.RemoveAll(Func`2&lt;String,Boolean&gt; removeExpression) 的 stub</summary>
        </member>
        <member name="F:SyntacticSugar.Fakes.StubCookiesManager`1.RemoveString">
            <summary>设置 CookiesManager`1.Remove(String key) 的 stub</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.StubDataTableSugar">
            <summary>SyntacticSugar.DataTableSugar 的存根类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubDataTableSugar.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubDataTableSugar.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubDataTableSugar.InitializeStub">
            <summary>初始化 type StubDataTableSugar 的新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubDataTableSugar.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubDataTableSugar.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.StubDateSugar">
            <summary>SyntacticSugar.DateSugar 的存根类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubDateSugar.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubDateSugar.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubDateSugar.InitializeStub">
            <summary>初始化 type StubDateSugar 的新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubDateSugar.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubDateSugar.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.StubDesc">
            <summary>SyntacticSugar.Desc 的存根类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubDesc.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubDesc.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubDesc.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:SyntacticSugar.Fakes.StubDesc.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubDesc.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:SyntacticSugar.Fakes.StubDesc.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubDesc.InitializeStub">
            <summary>初始化 type StubDesc 的新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubDesc.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubDesc.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubDesc.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:SyntacticSugar.Fakes.StubDesc.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubDesc.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:SyntacticSugar.Fakes.StubDesc.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubDesc.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:SyntacticSugar.Fakes.StubDesc.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.StubDynamicSugar">
            <summary>SyntacticSugar.DynamicSugar 的存根类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubDynamicSugar.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubDynamicSugar.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubDynamicSugar.InitializeStub">
            <summary>初始化 type StubDynamicSugar 的新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubDynamicSugar.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubDynamicSugar.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.StubEncryptSugar">
            <summary>SyntacticSugar.EncryptSugar 的存根类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubEncryptSugar.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubEncryptSugar.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubEncryptSugar.InitializeStub">
            <summary>初始化 type StubEncryptSugar 的新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubEncryptSugar.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubEncryptSugar.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.StubFileSugar">
            <summary>SyntacticSugar.FileSugar 的存根类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubFileSugar.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubFileSugar.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubFileSugar.InitializeStub">
            <summary>初始化 type StubFileSugar 的新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubFileSugar.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubFileSugar.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.StubHtmlInfo">
            <summary>SyntacticSugar.HtmlInfo 的存根类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubHtmlInfo.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubHtmlInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubHtmlInfo.InitializeStub">
            <summary>初始化 type StubHtmlInfo 的新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubHtmlInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubHtmlInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.StubIHttpStorageObject`1">
            <summary>SyntacticSugar.IHttpStorageObject`1 的存根类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubIHttpStorageObject`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubIHttpStorageObject`1.Add(System.String,`0)">
            <summary>设置 IHttpStorageObject`1.Add(String key, !0 value) 的 存根</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubIHttpStorageObject`1.Add(System.String,`0,System.Int32)">
            <summary>设置 IHttpStorageObject`1.Add(String key, !0 value, Int32 cacheDurationInSeconds) 的 存根</summary>
        </member>
        <member name="F:SyntacticSugar.Fakes.StubIHttpStorageObject`1.AddStringT0">
            <summary>设置 IHttpStorageObject`1.Add(String key, !0 value) 的 stub</summary>
        </member>
        <member name="F:SyntacticSugar.Fakes.StubIHttpStorageObject`1.AddStringT0Int32">
            <summary>设置 IHttpStorageObject`1.Add(String key, !0 value, Int32 cacheDurationInSeconds) 的 stub</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubIHttpStorageObject`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubIHttpStorageObject`1.ContainsKey(System.String)">
            <summary>设置 IHttpStorageObject`1.ContainsKey(String key) 的 存根</summary>
        </member>
        <member name="F:SyntacticSugar.Fakes.StubIHttpStorageObject`1.ContainsKeyString">
            <summary>设置 IHttpStorageObject`1.ContainsKey(String key) 的 stub</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubIHttpStorageObject`1.Get(System.String)">
            <summary>设置 IHttpStorageObject`1.Get(String key) 的 存根</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubIHttpStorageObject`1.GetAllKey">
            <summary>设置 IHttpStorageObject`1.GetAllKey() 的 存根</summary>
        </member>
        <member name="F:SyntacticSugar.Fakes.StubIHttpStorageObject`1.GetAllKey01">
            <summary>设置 IHttpStorageObject`1.GetAllKey() 的 stub</summary>
        </member>
        <member name="F:SyntacticSugar.Fakes.StubIHttpStorageObject`1.GetString">
            <summary>设置 IHttpStorageObject`1.Get(String key) 的 stub</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubIHttpStorageObject`1.InitializeStub">
            <summary>初始化 type StubIHttpStorageObject 的新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubIHttpStorageObject`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubIHttpStorageObject`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubIHttpStorageObject`1.Item(System.String)">
            <summary>设置 IHttpStorageObject`1.get_Item(String key) 的 stub</summary>
        </member>
        <member name="F:SyntacticSugar.Fakes.StubIHttpStorageObject`1.ItemGetString">
            <summary>设置 IHttpStorageObject`1.get_Item(String key) 的 stub</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubIHttpStorageObject`1.Remove(System.String)">
            <summary>设置 IHttpStorageObject`1.Remove(String key) 的 存根</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubIHttpStorageObject`1.RemoveAll">
            <summary>设置 IHttpStorageObject`1.RemoveAll() 的 存根</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubIHttpStorageObject`1.RemoveAll(System.Func{System.String,System.Boolean})">
            <summary>设置 IHttpStorageObject`1.RemoveAll(Func`2&lt;String,Boolean&gt; removeExpression) 的 存根</summary>
        </member>
        <member name="F:SyntacticSugar.Fakes.StubIHttpStorageObject`1.RemoveAll01">
            <summary>设置 IHttpStorageObject`1.RemoveAll() 的 stub</summary>
        </member>
        <member name="F:SyntacticSugar.Fakes.StubIHttpStorageObject`1.RemoveAllFuncOfStringBoolean">
            <summary>设置 IHttpStorageObject`1.RemoveAll(Func`2&lt;String,Boolean&gt; removeExpression) 的 stub</summary>
        </member>
        <member name="F:SyntacticSugar.Fakes.StubIHttpStorageObject`1.RemoveString">
            <summary>设置 IHttpStorageObject`1.Remove(String key) 的 stub</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.StubInitScriptModel">
            <summary>SyntacticSugar.InitScriptModel 的存根类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubInitScriptModel.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubInitScriptModel.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubInitScriptModel.InitializeStub">
            <summary>初始化 type StubInitScriptModel 的新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubInitScriptModel.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubInitScriptModel.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.StubMailSmtp">
            <summary>SyntacticSugar.MailSmtp 的存根类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubMailSmtp.#ctor(System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubMailSmtp.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubMailSmtp.InitializeStub">
            <summary>初始化 type StubMailSmtp 的新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubMailSmtp.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubMailSmtp.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.StubPageString">
            <summary>SyntacticSugar.PageString 的存根类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubPageString.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubPageString.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubPageString.InitializeStub">
            <summary>初始化 type StubPageString 的新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubPageString.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubPageString.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.StubPerformanceTest">
            <summary>SyntacticSugar.PerformanceTest 的存根类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubPerformanceTest.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubPerformanceTest.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubPerformanceTest.InitializeStub">
            <summary>初始化 type StubPerformanceTest 的新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubPerformanceTest.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubPerformanceTest.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.StubReflectionSugar">
            <summary>SyntacticSugar.ReflectionSugar 的存根类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubReflectionSugar.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubReflectionSugar.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubReflectionSugar.InitializeStub">
            <summary>初始化 type StubReflectionSugar 的新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubReflectionSugar.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubReflectionSugar.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.StubRequestInfo">
            <summary>SyntacticSugar.RequestInfo 的存根类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubRequestInfo.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubRequestInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubRequestInfo.InitializeStub">
            <summary>初始化 type StubRequestInfo 的新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubRequestInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubRequestInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.StubRequestToModel">
            <summary>SyntacticSugar.RequestToModel 的存根类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubRequestToModel.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubRequestToModel.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubRequestToModel.InitializeStub">
            <summary>初始化 type StubRequestToModel 的新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubRequestToModel.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubRequestToModel.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.StubResponseSugar">
            <summary>SyntacticSugar.ResponseSugar 的存根类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubResponseSugar.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubResponseSugar.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubResponseSugar.InitializeStub">
            <summary>初始化 type StubResponseSugar 的新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubResponseSugar.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubResponseSugar.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.StubSessionManager`1">
            <summary>SyntacticSugar.SessionManager`1 的存根类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubSessionManager`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubSessionManager`1.Add(System.String,`0)">
            <summary>设置 SessionManager`1.Add(String key, !0 value) 的 存根</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubSessionManager`1.Add(System.String,`0,System.Int32)">
            <summary>设置 SessionManager`1.Add(String key, !0 value, Int32 cacheDurationInSeconds) 的 存根</summary>
        </member>
        <member name="F:SyntacticSugar.Fakes.StubSessionManager`1.AddStringT0">
            <summary>设置 SessionManager`1.Add(String key, !0 value) 的 stub</summary>
        </member>
        <member name="F:SyntacticSugar.Fakes.StubSessionManager`1.AddStringT0Int32">
            <summary>设置 SessionManager`1.Add(String key, !0 value, Int32 cacheDurationInSeconds) 的 stub</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubSessionManager`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubSessionManager`1.ContainsKey(System.String)">
            <summary>设置 SessionManager`1.ContainsKey(String key) 的 存根</summary>
        </member>
        <member name="F:SyntacticSugar.Fakes.StubSessionManager`1.ContainsKeyString">
            <summary>设置 SessionManager`1.ContainsKey(String key) 的 stub</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubSessionManager`1.Get(System.String)">
            <summary>设置 SessionManager`1.Get(String key) 的 存根</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubSessionManager`1.GetAllKey">
            <summary>设置 SessionManager`1.GetAllKey() 的 存根</summary>
        </member>
        <member name="F:SyntacticSugar.Fakes.StubSessionManager`1.GetAllKey01">
            <summary>设置 SessionManager`1.GetAllKey() 的 stub</summary>
        </member>
        <member name="F:SyntacticSugar.Fakes.StubSessionManager`1.GetString">
            <summary>设置 SessionManager`1.Get(String key) 的 stub</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubSessionManager`1.InitializeStub">
            <summary>初始化 type StubSessionManager 的新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubSessionManager`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubSessionManager`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubSessionManager`1.Item(System.String)">
            <summary>设置 SessionManager`1.get_Item(String key) 的 stub</summary>
        </member>
        <member name="F:SyntacticSugar.Fakes.StubSessionManager`1.ItemGetString">
            <summary>设置 SessionManager`1.get_Item(String key) 的 stub</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubSessionManager`1.Remove(System.String)">
            <summary>设置 SessionManager`1.Remove(String key) 的 存根</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubSessionManager`1.RemoveAll">
            <summary>设置 SessionManager`1.RemoveAll() 的 存根</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubSessionManager`1.RemoveAll(System.Func{System.String,System.Boolean})">
            <summary>设置 SessionManager`1.RemoveAll(Func`2&lt;String,Boolean&gt; removeExpression) 的 存根</summary>
        </member>
        <member name="F:SyntacticSugar.Fakes.StubSessionManager`1.RemoveAll01">
            <summary>设置 SessionManager`1.RemoveAll() 的 stub</summary>
        </member>
        <member name="F:SyntacticSugar.Fakes.StubSessionManager`1.RemoveAllFuncOfStringBoolean">
            <summary>设置 SessionManager`1.RemoveAll(Func`2&lt;String,Boolean&gt; removeExpression) 的 stub</summary>
        </member>
        <member name="F:SyntacticSugar.Fakes.StubSessionManager`1.RemoveString">
            <summary>设置 SessionManager`1.Remove(String key) 的 stub</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.StubUploadFile">
            <summary>SyntacticSugar.UploadFile 的存根类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubUploadFile.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubUploadFile.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubUploadFile.InitializeStub">
            <summary>初始化 type StubUploadFile 的新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubUploadFile.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubUploadFile.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.StubUploadImage">
            <summary>SyntacticSugar.UploadImage 的存根类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubUploadImage.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubUploadImage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubUploadImage.InitializeStub">
            <summary>初始化 type StubUploadImage 的新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubUploadImage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubUploadImage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.StubValidationSugar">
            <summary>SyntacticSugar.ValidationSugar 的存根类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubValidationSugar.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubValidationSugar.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubValidationSugar.InitializeStub">
            <summary>初始化 type StubValidationSugar 的新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubValidationSugar.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubValidationSugar.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.StubValidationSugarOptionItemModel">
            <summary>SyntacticSugar.ValidationSugarOptionItemModel 的存根类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubValidationSugarOptionItemModel.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubValidationSugarOptionItemModel.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubValidationSugarOptionItemModel.InitializeStub">
            <summary>初始化 type StubValidationSugarOptionItemModel 的新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubValidationSugarOptionItemModel.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubValidationSugarOptionItemModel.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.StubVerifyCodeSugar">
            <summary>SyntacticSugar.VerifyCodeSugar 的存根类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubVerifyCodeSugar.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubVerifyCodeSugar.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubVerifyCodeSugar.InitializeStub">
            <summary>初始化 type StubVerifyCodeSugar 的新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubVerifyCodeSugar.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubVerifyCodeSugar.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.StubWebRequestSugar">
            <summary>SyntacticSugar.WebRequestSugar 的存根类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubWebRequestSugar.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubWebRequestSugar.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubWebRequestSugar.InitializeStub">
            <summary>初始化 type StubWebRequestSugar 的新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubWebRequestSugar.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubWebRequestSugar.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:SyntacticSugar.Fakes.StubXHtmlElement">
            <summary>SyntacticSugar.XHtmlElement 的存根类型</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubXHtmlElement.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubXHtmlElement.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:SyntacticSugar.Fakes.StubXHtmlElement.InitializeStub">
            <summary>初始化 type StubXHtmlElement 的新实例</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubXHtmlElement.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:SyntacticSugar.Fakes.StubXHtmlElement.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
    </members>
</doc>
